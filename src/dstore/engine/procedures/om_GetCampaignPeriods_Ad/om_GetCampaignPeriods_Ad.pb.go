// Code generated by protoc-gen-go.
// source: dstore/engine/procedures/om_GetCampaignPeriods_Ad.proto
// DO NOT EDIT!

/*
Package om_GetCampaignPeriods_Ad is a generated protocol buffer package.

It is generated from these files:
	dstore/engine/procedures/om_GetCampaignPeriods_Ad.proto

It has these top-level messages:
	Parameters
	Response
*/
package om_GetCampaignPeriods_Ad

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import dstore_values "dstore/values"
import dstore_engine_error "dstore/engine/error"
import dstore_engine_message "dstore/engine/message"
import dstore_engine_metainformation "dstore/engine/metainformation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Parameters struct {
	CampaignId             *dstore_values.IntegerValue   `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	CampaignIdNull         bool                          `protobuf:"varint,1001,opt,name=campaign_id_null,json=campaignIdNull" json:"campaign_id_null,omitempty"`
	PeriodDefinitionId     *dstore_values.IntegerValue   `protobuf:"bytes,2,opt,name=period_definition_id,json=periodDefinitionId" json:"period_definition_id,omitempty"`
	PeriodDefinitionIdNull bool                          `protobuf:"varint,1002,opt,name=period_definition_id_null,json=periodDefinitionIdNull" json:"period_definition_id_null,omitempty"`
	FromDate               *dstore_values.TimestampValue `protobuf:"bytes,3,opt,name=from_date,json=fromDate" json:"from_date,omitempty"`
	FromDateNull           bool                          `protobuf:"varint,1003,opt,name=from_date_null,json=fromDateNull" json:"from_date_null,omitempty"`
	ToDate                 *dstore_values.TimestampValue `protobuf:"bytes,4,opt,name=to_date,json=toDate" json:"to_date,omitempty"`
	ToDateNull             bool                          `protobuf:"varint,1004,opt,name=to_date_null,json=toDateNull" json:"to_date_null,omitempty"`
}

func (m *Parameters) Reset()                    { *m = Parameters{} }
func (m *Parameters) String() string            { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()               {}
func (*Parameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Parameters) GetCampaignId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CampaignId
	}
	return nil
}

func (m *Parameters) GetPeriodDefinitionId() *dstore_values.IntegerValue {
	if m != nil {
		return m.PeriodDefinitionId
	}
	return nil
}

func (m *Parameters) GetFromDate() *dstore_values.TimestampValue {
	if m != nil {
		return m.FromDate
	}
	return nil
}

func (m *Parameters) GetToDate() *dstore_values.TimestampValue {
	if m != nil {
		return m.ToDate
	}
	return nil
}

type Response struct {
	Error           *dstore_engine_error.Error                       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	MetaInformation []*dstore_engine_metainformation.MetaInformation `protobuf:"bytes,2,rep,name=meta_information,json=metaInformation" json:"meta_information,omitempty"`
	Message         []*dstore_engine_message.Message                 `protobuf:"bytes,3,rep,name=message" json:"message,omitempty"`
	Row             []*Response_Row                                  `protobuf:"bytes,4,rep,name=row" json:"row,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetError() *dstore_engine_error.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetMetaInformation() []*dstore_engine_metainformation.MetaInformation {
	if m != nil {
		return m.MetaInformation
	}
	return nil
}

func (m *Response) GetMessage() []*dstore_engine_message.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Response) GetRow() []*Response_Row {
	if m != nil {
		return m.Row
	}
	return nil
}

type Response_Row struct {
	RowId                      int32                         `protobuf:"varint,10000,opt,name=row_id,json=rowId" json:"row_id,omitempty"`
	CampaignId                 *dstore_values.IntegerValue   `protobuf:"bytes,10001,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	PeriodEndDateAndTime       *dstore_values.TimestampValue `protobuf:"bytes,10002,opt,name=period_end_date_and_time,json=periodEndDateAndTime" json:"period_end_date_and_time,omitempty"`
	PeriodDefinitionName       *dstore_values.StringValue    `protobuf:"bytes,10003,opt,name=period_definition_name,json=periodDefinitionName" json:"period_definition_name,omitempty"`
	PeriodDefinitionId         *dstore_values.IntegerValue   `protobuf:"bytes,10004,opt,name=period_definition_id,json=periodDefinitionId" json:"period_definition_id,omitempty"`
	PeriodEndDateAndTimeChar   *dstore_values.StringValue    `protobuf:"bytes,10005,opt,name=period_end_date_and_time_char,json=periodEndDateAndTimeChar" json:"period_end_date_and_time_char,omitempty"`
	PeriodStatus               *dstore_values.IntegerValue   `protobuf:"bytes,10006,opt,name=period_status,json=periodStatus" json:"period_status,omitempty"`
	PeriodStartDateAndTime     *dstore_values.TimestampValue `protobuf:"bytes,10007,opt,name=period_start_date_and_time,json=periodStartDateAndTime" json:"period_start_date_and_time,omitempty"`
	PeriodStartDateAndTimeChar *dstore_values.StringValue    `protobuf:"bytes,10008,opt,name=period_start_date_and_time_char,json=periodStartDateAndTimeChar" json:"period_start_date_and_time_char,omitempty"`
	Active                     *dstore_values.IntegerValue   `protobuf:"bytes,20001,opt,name=active" json:"active,omitempty"`
	CampaignDescription        *dstore_values.StringValue    `protobuf:"bytes,20003,opt,name=campaign_description,json=campaignDescription" json:"campaign_description,omitempty"`
	CampaignTypeId             *dstore_values.IntegerValue   `protobuf:"bytes,20004,opt,name=campaign_type_id,json=campaignTypeId" json:"campaign_type_id,omitempty"`
	CampaignName               *dstore_values.StringValue    `protobuf:"bytes,20007,opt,name=campaign_name,json=campaignName" json:"campaign_name,omitempty"`
}

func (m *Response_Row) Reset()                    { *m = Response_Row{} }
func (m *Response_Row) String() string            { return proto.CompactTextString(m) }
func (*Response_Row) ProtoMessage()               {}
func (*Response_Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Response_Row) GetCampaignId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CampaignId
	}
	return nil
}

func (m *Response_Row) GetPeriodEndDateAndTime() *dstore_values.TimestampValue {
	if m != nil {
		return m.PeriodEndDateAndTime
	}
	return nil
}

func (m *Response_Row) GetPeriodDefinitionName() *dstore_values.StringValue {
	if m != nil {
		return m.PeriodDefinitionName
	}
	return nil
}

func (m *Response_Row) GetPeriodDefinitionId() *dstore_values.IntegerValue {
	if m != nil {
		return m.PeriodDefinitionId
	}
	return nil
}

func (m *Response_Row) GetPeriodEndDateAndTimeChar() *dstore_values.StringValue {
	if m != nil {
		return m.PeriodEndDateAndTimeChar
	}
	return nil
}

func (m *Response_Row) GetPeriodStatus() *dstore_values.IntegerValue {
	if m != nil {
		return m.PeriodStatus
	}
	return nil
}

func (m *Response_Row) GetPeriodStartDateAndTime() *dstore_values.TimestampValue {
	if m != nil {
		return m.PeriodStartDateAndTime
	}
	return nil
}

func (m *Response_Row) GetPeriodStartDateAndTimeChar() *dstore_values.StringValue {
	if m != nil {
		return m.PeriodStartDateAndTimeChar
	}
	return nil
}

func (m *Response_Row) GetActive() *dstore_values.IntegerValue {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *Response_Row) GetCampaignDescription() *dstore_values.StringValue {
	if m != nil {
		return m.CampaignDescription
	}
	return nil
}

func (m *Response_Row) GetCampaignTypeId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CampaignTypeId
	}
	return nil
}

func (m *Response_Row) GetCampaignName() *dstore_values.StringValue {
	if m != nil {
		return m.CampaignName
	}
	return nil
}

func init() {
	proto.RegisterType((*Parameters)(nil), "dstore.engine.om_GetCampaignPeriods_Ad.Parameters")
	proto.RegisterType((*Response)(nil), "dstore.engine.om_GetCampaignPeriods_Ad.Response")
	proto.RegisterType((*Response_Row)(nil), "dstore.engine.om_GetCampaignPeriods_Ad.Response.Row")
}

var fileDescriptor0 = []byte{
	// 722 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x55, 0xdb, 0x4e, 0x14, 0x4d,
	0x10, 0x0e, 0xff, 0xfe, 0xec, 0x42, 0xb1, 0x22, 0x69, 0xc8, 0x66, 0x58, 0x82, 0x07, 0x8c, 0x46,
	0x6f, 0x06, 0xcf, 0x1a, 0xa2, 0x17, 0x08, 0x48, 0xb8, 0x60, 0xc4, 0x91, 0x90, 0x48, 0x4c, 0xc6,
	0x71, 0xa7, 0x59, 0x3b, 0x61, 0xbb, 0x37, 0x3d, 0xbd, 0x10, 0xdf, 0xc2, 0xb3, 0x5e, 0x70, 0x63,
	0x34, 0xf1, 0x2d, 0x7c, 0x00, 0x1f, 0xc4, 0xc4, 0xc3, 0x43, 0x58, 0x3d, 0xdd, 0x7b, 0x98, 0x81,
	0xcd, 0x0e, 0xde, 0xc0, 0xf6, 0x54, 0x7d, 0x5f, 0x7d, 0x5d, 0xf5, 0x75, 0x37, 0xdc, 0x8a, 0x62,
	0x25, 0x24, 0x9d, 0xa7, 0xbc, 0xce, 0x38, 0x9d, 0x6f, 0x4a, 0x51, 0xa3, 0x51, 0x4b, 0xd2, 0x78,
	0x5e, 0x34, 0x82, 0x55, 0xaa, 0x96, 0xc2, 0x46, 0x33, 0x64, 0x75, 0xbe, 0x41, 0x25, 0x13, 0x51,
	0x1c, 0x2c, 0x46, 0x2e, 0xe6, 0x28, 0x41, 0x2e, 0x18, 0xa0, 0x6b, 0x80, 0x6e, 0xbf, 0xec, 0xea,
	0xa4, 0x2d, 0xb0, 0x17, 0xee, 0xb6, 0x68, 0x6c, 0xc0, 0xd5, 0xe9, 0x74, 0x55, 0x2a, 0xa5, 0x90,
	0x36, 0x34, 0x93, 0x0e, 0x35, 0x68, 0x1c, 0x87, 0x75, 0x6a, 0x83, 0xe7, 0xb2, 0x41, 0x15, 0x32,
	0xbe, 0x23, 0x64, 0x23, 0x54, 0x4c, 0x70, 0x93, 0x34, 0xf7, 0xad, 0x00, 0xb0, 0x11, 0xca, 0x10,
	0xa3, 0x54, 0xc6, 0xe4, 0x0e, 0x8c, 0xd5, 0xac, 0xac, 0x80, 0x45, 0xce, 0xd0, 0x99, 0xa1, 0x8b,
	0x63, 0x57, 0x67, 0x5c, 0x2b, 0xdf, 0xca, 0x62, 0x5c, 0xd1, 0x3a, 0x95, 0x5b, 0x7a, 0xe5, 0x43,
	0x3b, 0x7f, 0x2d, 0x22, 0x97, 0x60, 0xa2, 0x07, 0x1d, 0xf0, 0xd6, 0xee, 0xae, 0xf3, 0xb3, 0x84,
	0x1c, 0x23, 0xfe, 0x78, 0x37, 0xcd, 0xc3, 0xcf, 0x64, 0x1d, 0xa6, 0x9a, 0xc9, 0xbe, 0x83, 0x88,
	0xee, 0x30, 0xce, 0xb4, 0x24, 0x5d, 0xf1, 0xbf, 0xc1, 0x15, 0x89, 0x01, 0x2e, 0x77, 0x70, 0x58,
	0x79, 0x01, 0xa6, 0x8f, 0xa2, 0x33, 0x12, 0x7e, 0x19, 0x09, 0x95, 0xc3, 0xb8, 0x44, 0xca, 0x02,
	0x8c, 0xee, 0x48, 0x1c, 0x49, 0x14, 0x2a, 0xea, 0x14, 0x92, 0xfa, 0xb3, 0x99, 0xfa, 0x8a, 0x61,
	0x6b, 0x15, 0xee, 0xc0, 0x28, 0x18, 0xd1, 0xf9, 0xcb, 0x98, 0x4e, 0xce, 0xc3, 0x78, 0x07, 0x6b,
	0x8a, 0xfd, 0x36, 0xc5, 0xca, 0xed, 0x94, 0xa4, 0xc4, 0x4d, 0x28, 0x29, 0x61, 0x0a, 0xfc, 0x9f,
	0xa7, 0x40, 0x51, 0x89, 0x84, 0xfe, 0x2c, 0x94, 0x2d, 0xce, 0x90, 0xff, 0x31, 0xe4, 0x60, 0xc2,
	0x9a, 0x7a, 0xee, 0xc7, 0x28, 0x8c, 0xf8, 0x34, 0x6e, 0x0a, 0x1e, 0x53, 0x72, 0x19, 0x86, 0x13,
	0x7b, 0xd8, 0xc1, 0x55, 0xdd, 0xb4, 0xef, 0x8c, 0x75, 0x56, 0xf4, 0x5f, 0xdf, 0x24, 0x92, 0xc7,
	0x30, 0xa1, 0x8d, 0x11, 0xf4, 0x38, 0x03, 0x67, 0x50, 0x40, 0xb0, 0x9b, 0x01, 0x67, 0xfd, 0xb3,
	0x8e, 0xeb, 0xb5, 0xee, 0xda, 0x3f, 0xd9, 0x48, 0x7f, 0x20, 0xb7, 0xa1, 0x64, 0x0d, 0x89, 0x5d,
	0xd5, 0x8c, 0xa7, 0x0e, 0x31, 0x1a, 0xbb, 0xae, 0x9b, 0xff, 0x7e, 0x3b, 0x9d, 0xdc, 0x87, 0x82,
	0x14, 0xfb, 0xd8, 0x2a, 0x8d, 0xba, 0xee, 0xe6, 0x3b, 0x3c, 0x6e, 0xbb, 0x0b, 0xae, 0x2f, 0xf6,
	0x7d, 0x4d, 0x50, 0xfd, 0x5e, 0x82, 0x02, 0x2e, 0x48, 0x05, 0x8a, 0xb8, 0xd4, 0xf6, 0x7a, 0xe9,
	0x61, 0x63, 0x86, 0xfd, 0x61, 0x5c, 0xa2, 0x6b, 0xee, 0xa6, 0xdd, 0xfe, 0xca, 0x3b, 0x9e, 0xdd,
	0xb7, 0xc0, 0xb1, 0xa6, 0xa3, 0x3c, 0x32, 0x53, 0x0a, 0xf1, 0x87, 0x9e, 0xa5, 0xf3, 0xda, 0xcb,
	0x33, 0x67, 0x7b, 0x06, 0x56, 0x78, 0xa4, 0xe7, 0xb9, 0xc8, 0xa3, 0x4d, 0x8c, 0x93, 0x87, 0x50,
	0x39, 0x6c, 0x66, 0x8e, 0x47, 0xd4, 0x79, 0xe3, 0xa5, 0xe7, 0x6a, 0x59, 0x63, 0x25, 0x19, 0xaf,
	0xa7, 0x28, 0xbb, 0x2e, 0xf7, 0x10, 0x48, 0xbc, 0x3e, 0xc7, 0xed, 0xad, 0xf7, 0x6f, 0xe7, 0xed,
	0x09, 0xcc, 0xf6, 0xdb, 0x7a, 0x50, 0x7b, 0x1e, 0x4a, 0xe7, 0xdd, 0x60, 0xa5, 0xce, 0x51, 0x9b,
	0x5f, 0x42, 0x30, 0x59, 0x84, 0x13, 0x96, 0x1d, 0x7b, 0xa5, 0x5a, 0xb1, 0xf3, 0x3e, 0x87, 0xcc,
	0xb2, 0x81, 0x3c, 0x4a, 0x10, 0x64, 0x1b, 0xaa, 0x5d, 0x0a, 0xa9, 0x32, 0xd3, 0xf9, 0x90, 0x6b,
	0x3a, 0x95, 0x0e, 0xa3, 0x54, 0xbd, 0xf3, 0x79, 0x0a, 0xa7, 0xfb, 0x73, 0x9b, 0xed, 0x7f, 0x1c,
	0xbc, 0xfd, 0xea, 0xd1, 0xec, 0x49, 0x03, 0x6e, 0x40, 0x31, 0xac, 0x29, 0xb6, 0x47, 0x9d, 0x4f,
	0x07, 0x39, 0xee, 0x60, 0x9b, 0x4c, 0x1e, 0xc0, 0x54, 0xc7, 0xcf, 0x11, 0x8d, 0x6b, 0x92, 0x35,
	0x93, 0x03, 0xfd, 0xf9, 0x60, 0x68, 0xa0, 0x9c, 0xc9, 0x36, 0x72, 0xb9, 0x0b, 0x24, 0xab, 0x3d,
	0x17, 0xba, 0x7a, 0xd1, 0xa4, 0xda, 0x32, 0x5f, 0xf2, 0x28, 0xea, 0x5c, 0xf7, 0x9b, 0x88, 0x42,
	0xbf, 0xe0, 0x44, 0x3b, 0x44, 0x89, 0x93, 0xbf, 0xe6, 0x90, 0x54, 0x6e, 0x43, 0xb4, 0x85, 0xef,
	0x6d, 0xc0, 0x0c, 0x13, 0x99, 0xbb, 0xa0, 0xfb, 0x02, 0x6f, 0x5f, 0x39, 0xf6, 0xdb, 0xfc, 0xac,
	0x98, 0x3c, 0x81, 0xd7, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0x99, 0xac, 0x11, 0x8d, 0xd7, 0x07,
	0x00, 0x00,
}
