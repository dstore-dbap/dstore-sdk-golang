// Code generated by protoc-gen-go.
// source: dstore/elastic/elasticservice.proto
// DO NOT EDIT!

/*
Package elastic_service is a generated protocol buffer package.

It is generated from these files:
	dstore/elastic/elasticservice.proto

It has these top-level messages:
*/
package elastic_service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import dstore_elastic_facetednavigation "dstore/elastic/item/faceted_navigation"
import dstore_elastic_suggest "dstore/elastic/item/suggest"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for ElasticService service

type ElasticServiceClient interface {
	FacetedNavigation(ctx context.Context, in *dstore_elastic_facetednavigation.Request, opts ...grpc.CallOption) (ElasticService_FacetedNavigationClient, error)
	ItemSuggest(ctx context.Context, in *dstore_elastic_suggest.Request, opts ...grpc.CallOption) (*dstore_elastic_suggest.Response, error)
}

type elasticServiceClient struct {
	cc *grpc.ClientConn
}

func NewElasticServiceClient(cc *grpc.ClientConn) ElasticServiceClient {
	return &elasticServiceClient{cc}
}

func (c *elasticServiceClient) FacetedNavigation(ctx context.Context, in *dstore_elastic_facetednavigation.Request, opts ...grpc.CallOption) (ElasticService_FacetedNavigationClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ElasticService_serviceDesc.Streams[0], c.cc, "/dstore.elastic.ElasticService/facetedNavigation", opts...)
	if err != nil {
		return nil, err
	}
	x := &elasticServiceFacetedNavigationClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ElasticService_FacetedNavigationClient interface {
	Recv() (*dstore_elastic_facetednavigation.Response, error)
	grpc.ClientStream
}

type elasticServiceFacetedNavigationClient struct {
	grpc.ClientStream
}

func (x *elasticServiceFacetedNavigationClient) Recv() (*dstore_elastic_facetednavigation.Response, error) {
	m := new(dstore_elastic_facetednavigation.Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *elasticServiceClient) ItemSuggest(ctx context.Context, in *dstore_elastic_suggest.Request, opts ...grpc.CallOption) (*dstore_elastic_suggest.Response, error) {
	out := new(dstore_elastic_suggest.Response)
	err := grpc.Invoke(ctx, "/dstore.elastic.ElasticService/itemSuggest", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ElasticService service

type ElasticServiceServer interface {
	FacetedNavigation(*dstore_elastic_facetednavigation.Request, ElasticService_FacetedNavigationServer) error
	ItemSuggest(context.Context, *dstore_elastic_suggest.Request) (*dstore_elastic_suggest.Response, error)
}

func RegisterElasticServiceServer(s *grpc.Server, srv ElasticServiceServer) {
	s.RegisterService(&_ElasticService_serviceDesc, srv)
}

func _ElasticService_FacetedNavigation_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(dstore_elastic_facetednavigation.Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ElasticServiceServer).FacetedNavigation(m, &elasticServiceFacetedNavigationServer{stream})
}

type ElasticService_FacetedNavigationServer interface {
	Send(*dstore_elastic_facetednavigation.Response) error
	grpc.ServerStream
}

type elasticServiceFacetedNavigationServer struct {
	grpc.ServerStream
}

func (x *elasticServiceFacetedNavigationServer) Send(m *dstore_elastic_facetednavigation.Response) error {
	return x.ServerStream.SendMsg(m)
}

func _ElasticService_ItemSuggest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(dstore_elastic_suggest.Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElasticServiceServer).ItemSuggest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dstore.elastic.ElasticService/ItemSuggest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElasticServiceServer).ItemSuggest(ctx, req.(*dstore_elastic_suggest.Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _ElasticService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dstore.elastic.ElasticService",
	HandlerType: (*ElasticServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "itemSuggest",
			Handler:    _ElasticService_ItemSuggest_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "facetedNavigation",
			Handler:       _ElasticService_FacetedNavigation_Handler,
			ServerStreams: true,
		},
	},
}

var fileDescriptor0 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x52, 0x4e, 0x29, 0x2e, 0xc9,
	0x2f, 0x4a, 0xd5, 0x4f, 0xcd, 0x49, 0x2c, 0x2e, 0xc9, 0x4c, 0x86, 0xd1, 0xc5, 0xa9, 0x45, 0x65,
	0x99, 0xc9, 0xa9, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x7c, 0x10, 0x45, 0x7a, 0x50, 0x49,
	0x29, 0x6d, 0x34, 0x4d, 0x99, 0x25, 0xa9, 0xb9, 0xfa, 0x69, 0x89, 0xc9, 0xa9, 0x25, 0xa9, 0x29,
	0x79, 0x89, 0x65, 0x99, 0xe9, 0x89, 0x25, 0x99, 0xf9, 0x79, 0x10, 0xcd, 0x52, 0x8a, 0xd8, 0x14,
	0x17, 0x97, 0xa6, 0xa7, 0xa7, 0x16, 0x97, 0x40, 0x94, 0x18, 0x5d, 0x61, 0xe4, 0xe2, 0x73, 0x85,
	0x48, 0x07, 0x43, 0x2c, 0x16, 0xca, 0xe3, 0x12, 0x84, 0x1a, 0xe8, 0x07, 0x37, 0x50, 0x48, 0x53,
	0x0f, 0xd5, 0x21, 0x7a, 0x98, 0x76, 0x06, 0xa5, 0x16, 0x96, 0x02, 0x0d, 0x96, 0xd2, 0x22, 0x46,
	0x69, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x12, 0x83, 0x01, 0xa3, 0x50, 0x10, 0x17, 0x37, 0xc8,
	0x61, 0xc1, 0x10, 0x77, 0x09, 0xc9, 0xa3, 0x6b, 0x87, 0x39, 0x18, 0x66, 0xbe, 0x02, 0x6e, 0x05,
	0x30, 0x53, 0x9d, 0x8c, 0xb9, 0x04, 0x33, 0xf3, 0xd1, 0xd4, 0x45, 0xc9, 0x61, 0x0f, 0xf0, 0x78,
	0x68, 0x88, 0x27, 0xb1, 0x81, 0x83, 0xc4, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xbc, 0x0a, 0xd4,
	0x95, 0x99, 0x01, 0x00, 0x00,
}
