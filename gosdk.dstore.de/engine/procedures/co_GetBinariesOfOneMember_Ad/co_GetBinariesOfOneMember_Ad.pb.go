// Code generated by protoc-gen-go.
// source: dstore/engine/procedures/co_GetBinariesOfOneMember_Ad.proto
// DO NOT EDIT!

/*
Package co_GetBinariesOfOneMember_Ad is a generated protocol buffer package.

It is generated from these files:
	dstore/engine/procedures/co_GetBinariesOfOneMember_Ad.proto

It has these top-level messages:
	Parameters
	Response
*/
package co_GetBinariesOfOneMember_Ad

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import dstore_values "gosdk.dstore.de/values"
import dstore_engine_error "gosdk.dstore.de/engine/error"
import dstore_engine_message "gosdk.dstore.de/engine/message"
import dstore_engine_metainformation "gosdk.dstore.de/engine/metainformation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Parameters struct {
	CommunityMemberId     *dstore_values.IntegerValue `protobuf:"bytes,1,opt,name=community_member_id,json=communityMemberId" json:"community_member_id,omitempty"`
	CommunityMemberIdNull bool                        `protobuf:"varint,1001,opt,name=community_member_id_null,json=communityMemberIdNull" json:"community_member_id_null,omitempty"`
	CommunityId           *dstore_values.IntegerValue `protobuf:"bytes,2,opt,name=community_id,json=communityId" json:"community_id,omitempty"`
	CommunityIdNull       bool                        `protobuf:"varint,1002,opt,name=community_id_null,json=communityIdNull" json:"community_id_null,omitempty"`
}

func (m *Parameters) Reset()                    { *m = Parameters{} }
func (m *Parameters) String() string            { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()               {}
func (*Parameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Parameters) GetCommunityMemberId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CommunityMemberId
	}
	return nil
}

func (m *Parameters) GetCommunityId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CommunityId
	}
	return nil
}

type Response struct {
	Error           *dstore_engine_error.Error                       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	MetaInformation []*dstore_engine_metainformation.MetaInformation `protobuf:"bytes,2,rep,name=meta_information,json=metaInformation" json:"meta_information,omitempty"`
	Message         []*dstore_engine_message.Message                 `protobuf:"bytes,3,rep,name=message" json:"message,omitempty"`
	Row             []*Response_Row                                  `protobuf:"bytes,4,rep,name=row" json:"row,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetError() *dstore_engine_error.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetMetaInformation() []*dstore_engine_metainformation.MetaInformation {
	if m != nil {
		return m.MetaInformation
	}
	return nil
}

func (m *Response) GetMessage() []*dstore_engine_message.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Response) GetRow() []*Response_Row {
	if m != nil {
		return m.Row
	}
	return nil
}

type Response_Row struct {
	RowId                     int32                         `protobuf:"varint,10000,opt,name=row_id,json=rowId" json:"row_id,omitempty"`
	BinaryId                  *dstore_values.IntegerValue   `protobuf:"bytes,10001,opt,name=binary_id,json=binaryId" json:"binary_id,omitempty"`
	BinaryDescription         *dstore_values.StringValue    `protobuf:"bytes,10002,opt,name=binary_description,json=binaryDescription" json:"binary_description,omitempty"`
	InputDateAndTime          *dstore_values.TimestampValue `protobuf:"bytes,10003,opt,name=input_date_and_time,json=inputDateAndTime" json:"input_date_and_time,omitempty"`
	ContentType               *dstore_values.StringValue    `protobuf:"bytes,10004,opt,name=content_type,json=contentType" json:"content_type,omitempty"`
	FileDateAndTime           *dstore_values.TimestampValue `protobuf:"bytes,10005,opt,name=file_date_and_time,json=fileDateAndTime" json:"file_date_and_time,omitempty"`
	FilesizeInKB              *dstore_values.IntegerValue   `protobuf:"bytes,10006,opt,name=filesize_in_k_b,json=filesizeInKB" json:"filesize_in_k_b,omitempty"`
	SortNo                    *dstore_values.IntegerValue   `protobuf:"bytes,10007,opt,name=sort_no,json=sortNo" json:"sort_no,omitempty"`
	CommunityBinaryCategory   *dstore_values.StringValue    `protobuf:"bytes,10008,opt,name=community_binary_category,json=communityBinaryCategory" json:"community_binary_category,omitempty"`
	CommunityBinaryCategoryId *dstore_values.IntegerValue   `protobuf:"bytes,10009,opt,name=community_binary_category_id,json=communityBinaryCategoryId" json:"community_binary_category_id,omitempty"`
	QuotedFileSizeInKB        *dstore_values.IntegerValue   `protobuf:"bytes,10010,opt,name=quoted_file_size_in_k_b,json=quotedFileSizeInKB" json:"quoted_file_size_in_k_b,omitempty"`
	FileDateAndTimeChar       *dstore_values.StringValue    `protobuf:"bytes,10011,opt,name=file_date_and_time_char,json=fileDateAndTimeChar" json:"file_date_and_time_char,omitempty"`
	MD5Hash                   *dstore_values.StringValue    `protobuf:"bytes,10012,opt,name=m_d5_hash,json=mD5Hash" json:"m_d5_hash,omitempty"`
	InputDateAndTimeChar      *dstore_values.StringValue    `protobuf:"bytes,10013,opt,name=input_date_and_time_char,json=inputDateAndTimeChar" json:"input_date_and_time_char,omitempty"`
}

func (m *Response_Row) Reset()                    { *m = Response_Row{} }
func (m *Response_Row) String() string            { return proto.CompactTextString(m) }
func (*Response_Row) ProtoMessage()               {}
func (*Response_Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Response_Row) GetBinaryId() *dstore_values.IntegerValue {
	if m != nil {
		return m.BinaryId
	}
	return nil
}

func (m *Response_Row) GetBinaryDescription() *dstore_values.StringValue {
	if m != nil {
		return m.BinaryDescription
	}
	return nil
}

func (m *Response_Row) GetInputDateAndTime() *dstore_values.TimestampValue {
	if m != nil {
		return m.InputDateAndTime
	}
	return nil
}

func (m *Response_Row) GetContentType() *dstore_values.StringValue {
	if m != nil {
		return m.ContentType
	}
	return nil
}

func (m *Response_Row) GetFileDateAndTime() *dstore_values.TimestampValue {
	if m != nil {
		return m.FileDateAndTime
	}
	return nil
}

func (m *Response_Row) GetFilesizeInKB() *dstore_values.IntegerValue {
	if m != nil {
		return m.FilesizeInKB
	}
	return nil
}

func (m *Response_Row) GetSortNo() *dstore_values.IntegerValue {
	if m != nil {
		return m.SortNo
	}
	return nil
}

func (m *Response_Row) GetCommunityBinaryCategory() *dstore_values.StringValue {
	if m != nil {
		return m.CommunityBinaryCategory
	}
	return nil
}

func (m *Response_Row) GetCommunityBinaryCategoryId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CommunityBinaryCategoryId
	}
	return nil
}

func (m *Response_Row) GetQuotedFileSizeInKB() *dstore_values.IntegerValue {
	if m != nil {
		return m.QuotedFileSizeInKB
	}
	return nil
}

func (m *Response_Row) GetFileDateAndTimeChar() *dstore_values.StringValue {
	if m != nil {
		return m.FileDateAndTimeChar
	}
	return nil
}

func (m *Response_Row) GetMD5Hash() *dstore_values.StringValue {
	if m != nil {
		return m.MD5Hash
	}
	return nil
}

func (m *Response_Row) GetInputDateAndTimeChar() *dstore_values.StringValue {
	if m != nil {
		return m.InputDateAndTimeChar
	}
	return nil
}

func init() {
	proto.RegisterType((*Parameters)(nil), "dstore.engine.co_GetBinariesOfOneMember_Ad.Parameters")
	proto.RegisterType((*Response)(nil), "dstore.engine.co_GetBinariesOfOneMember_Ad.Response")
	proto.RegisterType((*Response_Row)(nil), "dstore.engine.co_GetBinariesOfOneMember_Ad.Response.Row")
}

func init() {
	proto.RegisterFile("dstore/engine/procedures/co_GetBinariesOfOneMember_Ad.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 714 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x95, 0xdb, 0x4f, 0x13, 0x4f,
	0x14, 0xc7, 0x03, 0xfd, 0x41, 0x61, 0x20, 0x01, 0xa6, 0x3f, 0x65, 0x29, 0x6a, 0x0c, 0xbe, 0x18,
	0x4d, 0x16, 0xa3, 0x21, 0x62, 0x4c, 0x48, 0xb8, 0x78, 0x01, 0xd2, 0xa2, 0x0b, 0xd1, 0x68, 0x42,
	0x26, 0xdb, 0xee, 0xa1, 0x4c, 0xe8, 0xce, 0xd4, 0x99, 0xa9, 0xa4, 0x3e, 0xf9, 0xe8, 0xa3, 0xf7,
	0xbb, 0xff, 0x9f, 0xfa, 0x57, 0x78, 0x76, 0x67, 0x4b, 0xdb, 0x05, 0xdc, 0xfa, 0x02, 0x99, 0x3d,
	0xe7, 0xf3, 0x3d, 0x67, 0xbf, 0xe7, 0x6c, 0x87, 0xdc, 0x0e, 0xb4, 0x91, 0x0a, 0xe6, 0x41, 0xd4,
	0xb8, 0x80, 0xf9, 0x86, 0x92, 0x55, 0x08, 0x9a, 0x0a, 0xf4, 0x7c, 0x55, 0xb2, 0x7b, 0x60, 0x56,
	0xb8, 0xf0, 0x15, 0x07, 0xbd, 0xb5, 0xb7, 0x25, 0xa0, 0x04, 0x61, 0x05, 0x14, 0x5b, 0x0e, 0x5c,
	0xcc, 0x33, 0x92, 0x5e, 0xb1, 0xb0, 0x6b, 0x61, 0xf7, 0x6f, 0x44, 0xb1, 0x90, 0x14, 0x7a, 0xee,
	0xd7, 0x9b, 0xa0, 0xad, 0x40, 0x71, 0xa6, 0xb7, 0x3a, 0x28, 0x25, 0x55, 0x12, 0x9a, 0xed, 0x0d,
	0x85, 0xa0, 0xb5, 0x5f, 0x83, 0x24, 0x78, 0x29, 0x1d, 0x34, 0x3e, 0x17, 0x7b, 0x52, 0x85, 0xbe,
	0xe1, 0x52, 0xd8, 0xa4, 0xb9, 0x97, 0x83, 0x84, 0x3c, 0xf0, 0x95, 0x8f, 0x51, 0x50, 0x9a, 0x6e,
	0x92, 0x42, 0x55, 0x86, 0x61, 0x53, 0x70, 0xd3, 0x62, 0xa1, 0xed, 0x8b, 0x07, 0xce, 0xc0, 0xc5,
	0x81, 0xcb, 0x63, 0xd7, 0x67, 0xdd, 0xe4, 0x55, 0x92, 0xf6, 0xb8, 0x30, 0x50, 0x03, 0xf5, 0x28,
	0x3a, 0x79, 0x53, 0x47, 0x9c, 0x7d, 0x9d, 0xf5, 0x80, 0x2e, 0x12, 0xe7, 0x04, 0x31, 0x26, 0x9a,
	0xf5, 0xba, 0xf3, 0x2b, 0x8f, 0x92, 0x23, 0xde, 0x99, 0x63, 0x54, 0x19, 0xa3, 0x74, 0x89, 0x8c,
	0x77, 0x48, 0xac, 0x3f, 0x98, 0x5d, 0x7f, 0xec, 0x08, 0xc0, 0xca, 0x57, 0xc9, 0x54, 0x37, 0x6f,
	0x4b, 0xfe, 0xb6, 0x25, 0x27, 0xba, 0x12, 0xa3, 0x62, 0x73, 0xaf, 0x08, 0x19, 0xf1, 0x40, 0x37,
	0xa4, 0xd0, 0x40, 0xaf, 0x91, 0xa1, 0xd8, 0xe0, 0xe4, 0x95, 0x8b, 0x6e, 0xef, 0xf4, 0xac, 0xf9,
	0x77, 0xa2, 0xbf, 0x9e, 0x4d, 0xa4, 0x4f, 0xc8, 0x64, 0x64, 0x2d, 0xeb, 0xf2, 0x16, 0xfb, 0xcd,
	0x21, 0xec, 0xa6, 0xe0, 0xf4, 0x04, 0x4a, 0x78, 0x5e, 0xef, 0x9c, 0xbd, 0x89, 0xb0, 0xf7, 0x01,
	0x1a, 0x98, 0x4f, 0x46, 0xea, 0xe4, 0x62, 0xc5, 0x0b, 0xc7, 0x14, 0xed, 0xc0, 0x4b, 0xf6, 0xbf,
	0xd7, 0x4e, 0xa7, 0x1b, 0x24, 0xa7, 0xe4, 0xa1, 0xf3, 0x5f, 0x4c, 0x2d, 0xba, 0xfd, 0xaf, 0xa0,
	0xdb, 0x76, 0xc2, 0xf5, 0xe4, 0xa1, 0x17, 0x89, 0x14, 0x7f, 0xe6, 0x49, 0x0e, 0x0f, 0xf4, 0x2c,
	0x19, 0xc6, 0x63, 0x34, 0x8e, 0xd7, 0x65, 0x34, 0x67, 0xc8, 0x1b, 0xc2, 0x23, 0x9a, 0x7d, 0x8b,
	0x8c, 0x56, 0x22, 0xad, 0x78, 0x52, 0x6f, 0xca, 0xd9, 0xa3, 0x1a, 0xb1, 0xe9, 0x88, 0x6e, 0x10,
	0x9a, 0xa0, 0x01, 0xe8, 0xaa, 0xe2, 0x8d, 0xd8, 0xbd, 0xb7, 0xe5, 0x5e, 0xef, 0x13, 0x0d, 0x6d,
	0x14, 0x17, 0xb5, 0x64, 0xdb, 0x2c, 0xb6, 0xd6, 0xa1, 0x68, 0x89, 0x14, 0xb8, 0x68, 0x34, 0x0d,
	0x0b, 0x7c, 0x03, 0xcc, 0x17, 0x01, 0x33, 0x3c, 0x04, 0xe7, 0x9d, 0x15, 0x3b, 0x9f, 0x12, 0x8b,
	0x62, 0xda, 0xf8, 0x61, 0xc3, 0xea, 0x4d, 0xc6, 0xe8, 0x1a, 0x92, 0xcb, 0x22, 0xd8, 0xc1, 0x98,
	0x5d, 0x41, 0xec, 0x5a, 0x18, 0x66, 0x5a, 0x0d, 0x70, 0xde, 0x67, 0x37, 0x35, 0x96, 0x00, 0x3b,
	0x98, 0x8f, 0x5f, 0x12, 0xdd, 0xe3, 0x75, 0x48, 0x75, 0xf3, 0xa1, 0xaf, 0x6e, 0x26, 0x22, 0xb2,
	0xbb, 0x99, 0x55, 0x12, 0x3f, 0xd2, 0xfc, 0x05, 0xe0, 0x9e, 0xb1, 0x03, 0x56, 0x71, 0x3e, 0xf6,
	0x61, 0xf4, 0x78, 0x1b, 0x5a, 0x17, 0x9b, 0x2b, 0x74, 0x81, 0xe4, 0xb5, 0x54, 0x86, 0x09, 0xe9,
	0x7c, 0xea, 0x03, 0x1e, 0x8e, 0x92, 0xcb, 0x92, 0x3e, 0x26, 0x33, 0x9d, 0x6f, 0x29, 0x99, 0x56,
	0x15, 0x7b, 0xab, 0x49, 0xd5, 0x72, 0x3e, 0x67, 0xbb, 0x32, 0x7d, 0x44, 0xc7, 0x1b, 0xd7, 0x5a,
	0x4d, 0x58, 0xba, 0x4b, 0xce, 0x9d, 0x2a, 0x1c, 0xad, 0xd2, 0x97, 0x3e, 0x9a, 0x9c, 0x39, 0x45,
	0x1c, 0x77, 0xeb, 0x21, 0x99, 0x7e, 0xd6, 0x94, 0x06, 0x02, 0x16, 0xcf, 0xa1, 0xdb, 0xbb, 0xaf,
	0x7d, 0x28, 0x53, 0x0b, 0xdf, 0x45, 0x76, 0xbb, 0xed, 0x20, 0x4a, 0x1e, 0x9f, 0x29, 0xab, 0xee,
	0xfb, 0xca, 0xf9, 0x96, 0x6d, 0x44, 0x21, 0x35, 0xd5, 0x55, 0xe4, 0xe8, 0x4d, 0x32, 0x1a, 0xb2,
	0x60, 0x81, 0xed, 0xfb, 0x7a, 0xdf, 0xf9, 0x9e, 0x2d, 0x92, 0x0f, 0xd7, 0x16, 0xee, 0x63, 0x2e,
	0xdd, 0x26, 0xce, 0x09, 0xeb, 0x6e, 0x9b, 0xf9, 0x91, 0xad, 0xf3, 0x7f, 0x7a, 0xe1, 0xa3, 0x6e,
	0x56, 0x76, 0xc9, 0x2c, 0x97, 0xa9, 0x5f, 0x8b, 0xce, 0x6d, 0xf7, 0x74, 0xa9, 0x26, 0x75, 0x70,
	0xd0, 0x8e, 0x07, 0xff, 0x7a, 0x21, 0x56, 0x86, 0xe3, 0x3b, 0xe7, 0xc6, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x46, 0xb5, 0xa2, 0x50, 0x50, 0x07, 0x00, 0x00,
}
