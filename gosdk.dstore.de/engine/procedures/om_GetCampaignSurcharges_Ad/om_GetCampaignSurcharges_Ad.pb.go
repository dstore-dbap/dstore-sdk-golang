// Code generated by protoc-gen-go.
// source: dstore/engine/procedures/om_GetCampaignSurcharges_Ad.proto
// DO NOT EDIT!

/*
Package om_GetCampaignSurcharges_Ad is a generated protocol buffer package.

It is generated from these files:
	dstore/engine/procedures/om_GetCampaignSurcharges_Ad.proto

It has these top-level messages:
	Parameters
	Response
*/
package om_GetCampaignSurcharges_Ad

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import dstore_values "gosdk.dstore.de/values"
import dstore_engine_error "gosdk.dstore.de/engine/error"
import dstore_engine_message "gosdk.dstore.de/engine/message"
import dstore_engine_metainformation "gosdk.dstore.de/engine/metainformation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Parameters struct {
	CampaignId            *dstore_values.IntegerValue `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId" json:"campaign_id,omitempty"`
	CampaignIdNull        bool                        `protobuf:"varint,1001,opt,name=campaign_id_null,json=campaignIdNull" json:"campaign_id_null,omitempty"`
	BenefitId             *dstore_values.IntegerValue `protobuf:"bytes,2,opt,name=benefit_id,json=benefitId" json:"benefit_id,omitempty"`
	BenefitIdNull         bool                        `protobuf:"varint,1002,opt,name=benefit_id_null,json=benefitIdNull" json:"benefit_id_null,omitempty"`
	GetUnusedBenefits     *dstore_values.BooleanValue `protobuf:"bytes,3,opt,name=get_unused_benefits,json=getUnusedBenefits" json:"get_unused_benefits,omitempty"`
	GetUnusedBenefitsNull bool                        `protobuf:"varint,1003,opt,name=get_unused_benefits_null,json=getUnusedBenefitsNull" json:"get_unused_benefits_null,omitempty"`
}

func (m *Parameters) Reset()                    { *m = Parameters{} }
func (m *Parameters) String() string            { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()               {}
func (*Parameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Parameters) GetCampaignId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CampaignId
	}
	return nil
}

func (m *Parameters) GetBenefitId() *dstore_values.IntegerValue {
	if m != nil {
		return m.BenefitId
	}
	return nil
}

func (m *Parameters) GetGetUnusedBenefits() *dstore_values.BooleanValue {
	if m != nil {
		return m.GetUnusedBenefits
	}
	return nil
}

type Response struct {
	Error           *dstore_engine_error.Error                       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	MetaInformation []*dstore_engine_metainformation.MetaInformation `protobuf:"bytes,2,rep,name=meta_information,json=metaInformation" json:"meta_information,omitempty"`
	Message         []*dstore_engine_message.Message                 `protobuf:"bytes,3,rep,name=message" json:"message,omitempty"`
	Row             []*Response_Row                                  `protobuf:"bytes,4,rep,name=row" json:"row,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetError() *dstore_engine_error.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetMetaInformation() []*dstore_engine_metainformation.MetaInformation {
	if m != nil {
		return m.MetaInformation
	}
	return nil
}

func (m *Response) GetMessage() []*dstore_engine_message.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Response) GetRow() []*Response_Row {
	if m != nil {
		return m.Row
	}
	return nil
}

type Response_Row struct {
	RowId                     int32                       `protobuf:"varint,10000,opt,name=row_id,json=rowId" json:"row_id,omitempty"`
	ItemConditionId           *dstore_values.IntegerValue `protobuf:"bytes,10001,opt,name=item_condition_id,json=itemConditionId" json:"item_condition_id,omitempty"`
	BenefitId                 *dstore_values.IntegerValue `protobuf:"bytes,10002,opt,name=benefit_id,json=benefitId" json:"benefit_id,omitempty"`
	SurchargeValueUnitSymbol  *dstore_values.StringValue  `protobuf:"bytes,10003,opt,name=surcharge_value_unit_symbol,json=surchargeValueUnitSymbol" json:"surcharge_value_unit_symbol,omitempty"`
	DerivedFromPersonCharacId *dstore_values.BooleanValue `protobuf:"bytes,10004,opt,name=derived_from_person_charac_id,json=derivedFromPersonCharacId" json:"derived_from_person_charac_id,omitempty"`
	SurchargeIsAbsoluteValue  *dstore_values.IntegerValue `protobuf:"bytes,10005,opt,name=surcharge_is_absolute_value,json=surchargeIsAbsoluteValue" json:"surcharge_is_absolute_value,omitempty"`
	SurchargeValueUnitId      *dstore_values.IntegerValue `protobuf:"bytes,10006,opt,name=surcharge_value_unit_id,json=surchargeValueUnitId" json:"surcharge_value_unit_id,omitempty"`
	DerivedFromNodeCharacId   *dstore_values.BooleanValue `protobuf:"bytes,10007,opt,name=derived_from_node_charac_id,json=derivedFromNodeCharacId" json:"derived_from_node_charac_id,omitempty"`
	SurchargeTypeDescription  *dstore_values.StringValue  `protobuf:"bytes,10008,opt,name=surcharge_type_description,json=surchargeTypeDescription" json:"surcharge_type_description,omitempty"`
	SurchargeValue            *dstore_values.DecimalValue `protobuf:"bytes,10009,opt,name=surcharge_value,json=surchargeValue" json:"surcharge_value,omitempty"`
	ApplyToOption             *dstore_values.IntegerValue `protobuf:"bytes,10010,opt,name=apply_to_option,json=applyToOption" json:"apply_to_option,omitempty"`
	SurchargeTypeId           *dstore_values.IntegerValue `protobuf:"bytes,10011,opt,name=surcharge_type_id,json=surchargeTypeId" json:"surcharge_type_id,omitempty"`
}

func (m *Response_Row) Reset()                    { *m = Response_Row{} }
func (m *Response_Row) String() string            { return proto.CompactTextString(m) }
func (*Response_Row) ProtoMessage()               {}
func (*Response_Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Response_Row) GetItemConditionId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ItemConditionId
	}
	return nil
}

func (m *Response_Row) GetBenefitId() *dstore_values.IntegerValue {
	if m != nil {
		return m.BenefitId
	}
	return nil
}

func (m *Response_Row) GetSurchargeValueUnitSymbol() *dstore_values.StringValue {
	if m != nil {
		return m.SurchargeValueUnitSymbol
	}
	return nil
}

func (m *Response_Row) GetDerivedFromPersonCharacId() *dstore_values.BooleanValue {
	if m != nil {
		return m.DerivedFromPersonCharacId
	}
	return nil
}

func (m *Response_Row) GetSurchargeIsAbsoluteValue() *dstore_values.IntegerValue {
	if m != nil {
		return m.SurchargeIsAbsoluteValue
	}
	return nil
}

func (m *Response_Row) GetSurchargeValueUnitId() *dstore_values.IntegerValue {
	if m != nil {
		return m.SurchargeValueUnitId
	}
	return nil
}

func (m *Response_Row) GetDerivedFromNodeCharacId() *dstore_values.BooleanValue {
	if m != nil {
		return m.DerivedFromNodeCharacId
	}
	return nil
}

func (m *Response_Row) GetSurchargeTypeDescription() *dstore_values.StringValue {
	if m != nil {
		return m.SurchargeTypeDescription
	}
	return nil
}

func (m *Response_Row) GetSurchargeValue() *dstore_values.DecimalValue {
	if m != nil {
		return m.SurchargeValue
	}
	return nil
}

func (m *Response_Row) GetApplyToOption() *dstore_values.IntegerValue {
	if m != nil {
		return m.ApplyToOption
	}
	return nil
}

func (m *Response_Row) GetSurchargeTypeId() *dstore_values.IntegerValue {
	if m != nil {
		return m.SurchargeTypeId
	}
	return nil
}

func init() {
	proto.RegisterType((*Parameters)(nil), "dstore.engine.om_GetCampaignSurcharges_Ad.Parameters")
	proto.RegisterType((*Response)(nil), "dstore.engine.om_GetCampaignSurcharges_Ad.Response")
	proto.RegisterType((*Response_Row)(nil), "dstore.engine.om_GetCampaignSurcharges_Ad.Response.Row")
}

func init() {
	proto.RegisterFile("dstore/engine/procedures/om_GetCampaignSurcharges_Ad.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 729 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x55, 0xcb, 0x4e, 0xdc, 0x4a,
	0x10, 0x15, 0xcc, 0xe5, 0xd5, 0x08, 0x06, 0xcc, 0xbd, 0x17, 0x33, 0xa3, 0x7b, 0x15, 0x91, 0x45,
	0xc2, 0xc6, 0x44, 0xc9, 0x22, 0x11, 0x49, 0x16, 0xbc, 0x92, 0x8c, 0x22, 0x1c, 0x64, 0x20, 0x12,
	0x24, 0x8a, 0xd5, 0xe3, 0x6e, 0x9c, 0x56, 0xec, 0x6e, 0xab, 0xdb, 0x06, 0xf1, 0x17, 0x79, 0x3f,
	0x37, 0xf9, 0x93, 0x7c, 0x4b, 0x96, 0x49, 0x7e, 0x22, 0x65, 0x77, 0x0f, 0x1e, 0x0f, 0xa3, 0x30,
	0x6c, 0x40, 0x35, 0x55, 0xe7, 0xd4, 0xa9, 0x53, 0xd5, 0x32, 0x5a, 0x21, 0x2a, 0x15, 0x92, 0x2e,
	0x53, 0x1e, 0x32, 0x4e, 0x97, 0x13, 0x29, 0x02, 0x4a, 0x32, 0x49, 0xd5, 0xb2, 0x88, 0xfd, 0xfb,
	0x34, 0x5d, 0xc7, 0x71, 0x82, 0x59, 0xc8, 0x77, 0x32, 0x19, 0x3c, 0xc7, 0x32, 0xa4, 0xca, 0x5f,
	0x25, 0x0e, 0x94, 0xa5, 0xc2, 0x5a, 0xd2, 0x58, 0x47, 0x63, 0x9d, 0x3f, 0x00, 0x1a, 0x73, 0xa6,
	0xcd, 0x11, 0x8e, 0x32, 0xaa, 0x34, 0xbe, 0xb1, 0x50, 0xed, 0x4d, 0xa5, 0x14, 0xd2, 0xa4, 0x9a,
	0xd5, 0x54, 0x4c, 0x95, 0xc2, 0x21, 0x35, 0xc9, 0xcb, 0xbd, 0xc9, 0x14, 0x33, 0x7e, 0x28, 0x64,
	0x8c, 0x53, 0x26, 0xb8, 0x2e, 0x5a, 0xfc, 0x3e, 0x8c, 0xd0, 0x36, 0x96, 0x18, 0xb2, 0x54, 0x2a,
	0xeb, 0x0e, 0x9a, 0x0c, 0x8c, 0x32, 0x9f, 0x11, 0x7b, 0xe8, 0xd2, 0xd0, 0xd5, 0xc9, 0xeb, 0x4d,
	0xc7, 0x4c, 0x60, 0x64, 0x31, 0x9e, 0xd2, 0x90, 0xca, 0xc7, 0x79, 0xe4, 0xa1, 0x4e, 0x7d, 0x8b,
	0x58, 0x4b, 0x68, 0xa6, 0x0b, 0xed, 0xf3, 0x2c, 0x8a, 0xec, 0x1f, 0x63, 0xc0, 0x31, 0xee, 0x4d,
	0x97, 0x65, 0x2e, 0xfc, 0x6c, 0xad, 0x20, 0xd4, 0xa6, 0x9c, 0x1e, 0xb2, 0x34, 0xef, 0x33, 0x7c,
	0x7e, 0x9f, 0x09, 0x53, 0x0e, 0x6d, 0xae, 0xa0, 0x7a, 0x89, 0xd5, 0x5d, 0x7e, 0xea, 0x2e, 0x53,
	0xa7, 0x45, 0x45, 0x93, 0x87, 0x68, 0x2e, 0xa4, 0xa9, 0x9f, 0xf1, 0x4c, 0x51, 0xe2, 0x9b, 0x9c,
	0xb2, 0x6b, 0x7d, 0xbb, 0xb5, 0x85, 0x88, 0x28, 0xe6, 0xba, 0xdb, 0x2c, 0xe0, 0xf6, 0x0a, 0xd8,
	0x9a, 0x41, 0x59, 0xb7, 0x90, 0xdd, 0x87, 0x4c, 0xb7, 0xff, 0xa5, 0xdb, 0xff, 0x73, 0x06, 0x95,
	0xcb, 0x58, 0xfc, 0x36, 0x81, 0xc6, 0x3d, 0xaa, 0x12, 0xc1, 0x15, 0xb5, 0xae, 0xa1, 0x91, 0x62,
	0x83, 0xc6, 0xdb, 0x86, 0x53, 0xbd, 0x0e, 0xbd, 0xdd, 0xcd, 0xfc, 0xaf, 0xa7, 0x0b, 0xad, 0x7d,
	0x34, 0x93, 0xef, 0xce, 0xef, 0x5a, 0x1e, 0x18, 0x56, 0x03, 0xb0, 0xd3, 0x03, 0xee, 0x5d, 0xf1,
	0x16, 0xc4, 0xad, 0x32, 0xf6, 0xea, 0x71, 0xf5, 0x07, 0x98, 0x69, 0xcc, 0xdc, 0x0c, 0x98, 0x92,
	0x33, 0xfe, 0x7f, 0x86, 0x51, 0x5f, 0xd4, 0x96, 0xfe, 0xef, 0x75, 0xca, 0xad, 0x16, 0xaa, 0x49,
	0x71, 0x6c, 0xff, 0x55, 0xa0, 0x6e, 0x3a, 0x03, 0x9f, 0xb8, 0xd3, 0x31, 0xc2, 0xf1, 0xc4, 0xb1,
	0x97, 0x73, 0x34, 0xbe, 0x8e, 0xa1, 0x1a, 0x04, 0xd6, 0xbf, 0x68, 0x14, 0xc2, 0xfc, 0x1c, 0x5e,
	0xba, 0xe0, 0xcd, 0x88, 0x37, 0x02, 0x21, 0xac, 0xfb, 0x01, 0x9a, 0x65, 0x29, 0x8d, 0xfd, 0x40,
	0x70, 0xc2, 0x72, 0xd9, 0x79, 0xc9, 0x2b, 0xf7, 0xfc, 0x93, 0xa9, 0xe7, 0xb0, 0xf5, 0x0e, 0x0a,
	0x98, 0x6e, 0x57, 0x8e, 0xee, 0xb5, 0x7b, 0xa1, 0xab, 0x3b, 0x40, 0x4d, 0xd5, 0x99, 0xc4, 0x2f,
	0x6a, 0xe1, 0x16, 0x80, 0x49, 0x9d, 0xc4, 0x6d, 0x11, 0xd9, 0x6f, 0xdc, 0xea, 0x3e, 0x0d, 0x9b,
	0x4a, 0x25, 0xe3, 0xa1, 0x26, 0xb3, 0x4f, 0xf1, 0x45, 0xbc, 0x07, 0xe8, 0x9d, 0x02, 0x6c, 0x3d,
	0x43, 0xff, 0x11, 0x2a, 0xd9, 0x11, 0x1c, 0xd6, 0xa1, 0x04, 0xf7, 0x12, 0x78, 0x8b, 0x30, 0x67,
	0x5e, 0x8c, 0x83, 0x5c, 0xeb, 0x5b, 0xf7, 0xfc, 0x9b, 0x5d, 0x30, 0x14, 0xf7, 0x80, 0x61, 0xbb,
	0x20, 0x58, 0x2f, 0xf0, 0xa0, 0xfd, 0x49, 0xb7, 0x76, 0xa6, 0x7c, 0xdc, 0x56, 0x22, 0xca, 0x52,
	0x33, 0x87, 0xfd, 0x6e, 0x00, 0x27, 0x4a, 0xf1, 0x2d, 0xb5, 0x6a, 0xe0, 0x45, 0xc6, 0xda, 0x41,
	0xf3, 0x7d, 0x8d, 0x01, 0xd9, 0xef, 0x07, 0x20, 0xfe, 0xfb, 0xac, 0x2b, 0xda, 0xed, 0x8a, 0x23,
	0x5c, 0x10, 0xda, 0xe5, 0xc7, 0x87, 0x01, 0xfc, 0x98, 0xef, 0xf2, 0xc3, 0x05, 0xf8, 0xa9, 0x1b,
	0xfb, 0xa8, 0x51, 0x0a, 0x4e, 0x4f, 0x12, 0xea, 0x13, 0xaa, 0x02, 0xc9, 0x92, 0xe2, 0x69, 0x7d,
	0xbc, 0xc8, 0x22, 0x77, 0x01, 0xbd, 0x51, 0x82, 0xad, 0x4d, 0x54, 0xef, 0xf1, 0xc2, 0xfe, 0xd4,
	0x5f, 0x2a, 0xa1, 0x01, 0x8b, 0x71, 0xa4, 0x09, 0xa7, 0xab, 0x1e, 0x58, 0x1b, 0xa8, 0x8e, 0x93,
	0x24, 0x3a, 0xf1, 0x53, 0xe1, 0x0b, 0x2d, 0xeb, 0xf3, 0x00, 0x56, 0x4e, 0x15, 0xa0, 0x5d, 0xf1,
	0x48, 0x8b, 0x81, 0x87, 0xd3, 0x33, 0x27, 0x38, 0xf7, 0x65, 0x90, 0x87, 0x53, 0x99, 0xaf, 0x45,
	0xd6, 0x9e, 0xa2, 0x26, 0x13, 0x3d, 0x8f, 0xbc, 0xfc, 0x06, 0x1e, 0xdc, 0x0d, 0x85, 0x22, 0x2f,
	0x3a, 0x79, 0x72, 0xc1, 0xcf, 0x64, 0x7b, 0xb4, 0xf8, 0x14, 0xdd, 0xf8, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0xdb, 0x2e, 0x35, 0x10, 0x65, 0x07, 0x00, 0x00,
}
