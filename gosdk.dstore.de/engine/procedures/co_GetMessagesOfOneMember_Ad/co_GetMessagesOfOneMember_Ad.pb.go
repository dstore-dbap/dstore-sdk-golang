// Code generated by protoc-gen-go.
// source: dstore/engine/procedures/co_GetMessagesOfOneMember_Ad.proto
// DO NOT EDIT!

/*
Package co_GetMessagesOfOneMember_Ad is a generated protocol buffer package.

It is generated from these files:
	dstore/engine/procedures/co_GetMessagesOfOneMember_Ad.proto

It has these top-level messages:
	Parameters
	Response
*/
package co_GetMessagesOfOneMember_Ad

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import dstore_values "gosdk.dstore.de/values"
import dstore_engine_error "gosdk.dstore.de/engine/error"
import dstore_engine_message "gosdk.dstore.de/engine/message"
import dstore_engine_metainformation "gosdk.dstore.de/engine/metainformation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Parameters struct {
	CommunityMemberId             *dstore_values.IntegerValue   `protobuf:"bytes,1,opt,name=community_member_id,json=communityMemberId" json:"community_member_id,omitempty"`
	CommunityMemberIdNull         bool                          `protobuf:"varint,1001,opt,name=community_member_id_null,json=communityMemberIdNull" json:"community_member_id_null,omitempty"`
	CommunityId                   *dstore_values.IntegerValue   `protobuf:"bytes,2,opt,name=community_id,json=communityId" json:"community_id,omitempty"`
	CommunityIdNull               bool                          `protobuf:"varint,1002,opt,name=community_id_null,json=communityIdNull" json:"community_id_null,omitempty"`
	CommunicatingMemberId         *dstore_values.IntegerValue   `protobuf:"bytes,3,opt,name=communicating_member_id,json=communicatingMemberId" json:"communicating_member_id,omitempty"`
	CommunicatingMemberIdNull     bool                          `protobuf:"varint,1003,opt,name=communicating_member_id_null,json=communicatingMemberIdNull" json:"communicating_member_id_null,omitempty"`
	SentOrReceivedMessages        *dstore_values.IntegerValue   `protobuf:"bytes,4,opt,name=sent_or_received_messages,json=sentOrReceivedMessages" json:"sent_or_received_messages,omitempty"`
	SentOrReceivedMessagesNull    bool                          `protobuf:"varint,1004,opt,name=sent_or_received_messages_null,json=sentOrReceivedMessagesNull" json:"sent_or_received_messages_null,omitempty"`
	FromDate                      *dstore_values.TimestampValue `protobuf:"bytes,5,opt,name=from_date,json=fromDate" json:"from_date,omitempty"`
	FromDateNull                  bool                          `protobuf:"varint,1005,opt,name=from_date_null,json=fromDateNull" json:"from_date_null,omitempty"`
	ToDate                        *dstore_values.TimestampValue `protobuf:"bytes,6,opt,name=to_date,json=toDate" json:"to_date,omitempty"`
	ToDateNull                    bool                          `protobuf:"varint,1006,opt,name=to_date_null,json=toDateNull" json:"to_date_null,omitempty"`
	OrderByMessageDateAndTime     *dstore_values.IntegerValue   `protobuf:"bytes,7,opt,name=order_by_message_date_and_time,json=orderByMessageDateAndTime" json:"order_by_message_date_and_time,omitempty"`
	OrderByMessageDateAndTimeNull bool                          `protobuf:"varint,1007,opt,name=order_by_message_date_and_time_null,json=orderByMessageDateAndTimeNull" json:"order_by_message_date_and_time_null,omitempty"`
}

func (m *Parameters) Reset()                    { *m = Parameters{} }
func (m *Parameters) String() string            { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()               {}
func (*Parameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Parameters) GetCommunityMemberId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CommunityMemberId
	}
	return nil
}

func (m *Parameters) GetCommunityId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CommunityId
	}
	return nil
}

func (m *Parameters) GetCommunicatingMemberId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CommunicatingMemberId
	}
	return nil
}

func (m *Parameters) GetSentOrReceivedMessages() *dstore_values.IntegerValue {
	if m != nil {
		return m.SentOrReceivedMessages
	}
	return nil
}

func (m *Parameters) GetFromDate() *dstore_values.TimestampValue {
	if m != nil {
		return m.FromDate
	}
	return nil
}

func (m *Parameters) GetToDate() *dstore_values.TimestampValue {
	if m != nil {
		return m.ToDate
	}
	return nil
}

func (m *Parameters) GetOrderByMessageDateAndTime() *dstore_values.IntegerValue {
	if m != nil {
		return m.OrderByMessageDateAndTime
	}
	return nil
}

type Response struct {
	Error           *dstore_engine_error.Error                       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	MetaInformation []*dstore_engine_metainformation.MetaInformation `protobuf:"bytes,2,rep,name=meta_information,json=metaInformation" json:"meta_information,omitempty"`
	Message         []*dstore_engine_message.Message                 `protobuf:"bytes,3,rep,name=message" json:"message,omitempty"`
	Row             []*Response_Row                                  `protobuf:"bytes,4,rep,name=row" json:"row,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetError() *dstore_engine_error.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetMetaInformation() []*dstore_engine_metainformation.MetaInformation {
	if m != nil {
		return m.MetaInformation
	}
	return nil
}

func (m *Response) GetMessage() []*dstore_engine_message.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Response) GetRow() []*Response_Row {
	if m != nil {
		return m.Row
	}
	return nil
}

type Response_Row struct {
	RowId                  int32                         `protobuf:"varint,10000,opt,name=row_id,json=rowId" json:"row_id,omitempty"`
	ToCommunityMember      *dstore_values.StringValue    `protobuf:"bytes,10001,opt,name=to_community_member,json=toCommunityMember" json:"to_community_member,omitempty"`
	MessageStatus          *dstore_values.IntegerValue   `protobuf:"bytes,10002,opt,name=message_status,json=messageStatus" json:"message_status,omitempty"`
	ToCommunityMemberId    *dstore_values.IntegerValue   `protobuf:"bytes,10003,opt,name=to_community_member_id,json=toCommunityMemberId" json:"to_community_member_id,omitempty"`
	Message                *dstore_values.StringValue    `protobuf:"bytes,10004,opt,name=message" json:"message,omitempty"`
	FromCommunityMember    *dstore_values.StringValue    `protobuf:"bytes,10005,opt,name=from_community_member,json=fromCommunityMember" json:"from_community_member,omitempty"`
	CommunityId            *dstore_values.IntegerValue   `protobuf:"bytes,10006,opt,name=community_id,json=communityId" json:"community_id,omitempty"`
	CommunityName          *dstore_values.StringValue    `protobuf:"bytes,10007,opt,name=community_name,json=communityName" json:"community_name,omitempty"`
	MessageDateAndTime     *dstore_values.TimestampValue `protobuf:"bytes,10008,opt,name=message_date_and_time,json=messageDateAndTime" json:"message_date_and_time,omitempty"`
	FromCommunityMemberId  *dstore_values.IntegerValue   `protobuf:"bytes,10009,opt,name=from_community_member_id,json=fromCommunityMemberId" json:"from_community_member_id,omitempty"`
	MessageDateAndTimeChar *dstore_values.StringValue    `protobuf:"bytes,10010,opt,name=message_date_and_time_char,json=messageDateAndTimeChar" json:"message_date_and_time_char,omitempty"`
}

func (m *Response_Row) Reset()                    { *m = Response_Row{} }
func (m *Response_Row) String() string            { return proto.CompactTextString(m) }
func (*Response_Row) ProtoMessage()               {}
func (*Response_Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Response_Row) GetToCommunityMember() *dstore_values.StringValue {
	if m != nil {
		return m.ToCommunityMember
	}
	return nil
}

func (m *Response_Row) GetMessageStatus() *dstore_values.IntegerValue {
	if m != nil {
		return m.MessageStatus
	}
	return nil
}

func (m *Response_Row) GetToCommunityMemberId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ToCommunityMemberId
	}
	return nil
}

func (m *Response_Row) GetMessage() *dstore_values.StringValue {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Response_Row) GetFromCommunityMember() *dstore_values.StringValue {
	if m != nil {
		return m.FromCommunityMember
	}
	return nil
}

func (m *Response_Row) GetCommunityId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CommunityId
	}
	return nil
}

func (m *Response_Row) GetCommunityName() *dstore_values.StringValue {
	if m != nil {
		return m.CommunityName
	}
	return nil
}

func (m *Response_Row) GetMessageDateAndTime() *dstore_values.TimestampValue {
	if m != nil {
		return m.MessageDateAndTime
	}
	return nil
}

func (m *Response_Row) GetFromCommunityMemberId() *dstore_values.IntegerValue {
	if m != nil {
		return m.FromCommunityMemberId
	}
	return nil
}

func (m *Response_Row) GetMessageDateAndTimeChar() *dstore_values.StringValue {
	if m != nil {
		return m.MessageDateAndTimeChar
	}
	return nil
}

func init() {
	proto.RegisterType((*Parameters)(nil), "dstore.engine.co_GetMessagesOfOneMember_Ad.Parameters")
	proto.RegisterType((*Response)(nil), "dstore.engine.co_GetMessagesOfOneMember_Ad.Response")
	proto.RegisterType((*Response_Row)(nil), "dstore.engine.co_GetMessagesOfOneMember_Ad.Response.Row")
}

func init() {
	proto.RegisterFile("dstore/engine/procedures/co_GetMessagesOfOneMember_Ad.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 795 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x56, 0xeb, 0x4e, 0x14, 0x4b,
	0x10, 0x0e, 0x67, 0xcf, 0x5e, 0x4e, 0x71, 0x3b, 0xcc, 0x66, 0xf7, 0xcc, 0x2e, 0x07, 0xa2, 0x10,
	0x13, 0xa3, 0xc9, 0x60, 0x34, 0x1a, 0xa2, 0x09, 0x0a, 0x68, 0x0c, 0x1a, 0x76, 0x75, 0x50, 0x8c,
	0x26, 0x3a, 0x19, 0x76, 0x9a, 0x75, 0x22, 0x33, 0x4d, 0xba, 0x7b, 0x21, 0xbc, 0x85, 0xe2, 0xdd,
	0x3f, 0xbe, 0x83, 0x6f, 0xe5, 0xfd, 0x15, 0xac, 0x9e, 0xee, 0xbd, 0xcd, 0x0e, 0xcc, 0xf2, 0x87,
	0xa4, 0xb7, 0xea, 0xfb, 0xea, 0xab, 0xea, 0xfe, 0x8a, 0x81, 0x6b, 0x1e, 0x17, 0x94, 0x91, 0x05,
	0x12, 0x36, 0xfd, 0x90, 0x2c, 0xec, 0x32, 0xda, 0x20, 0x5e, 0x8b, 0x11, 0xbe, 0xd0, 0xa0, 0xce,
	0x6d, 0x22, 0xd6, 0x09, 0xe7, 0x6e, 0x93, 0xf0, 0xfa, 0x76, 0x3d, 0x24, 0xeb, 0x24, 0xd8, 0x22,
	0xcc, 0x59, 0xf6, 0x2c, 0xcc, 0x13, 0xd4, 0x38, 0xa7, 0xc0, 0x96, 0x02, 0x5b, 0xc7, 0x21, 0xaa,
	0x45, 0x5d, 0x68, 0xcf, 0xdd, 0x69, 0x11, 0xae, 0x08, 0xaa, 0x95, 0xfe, 0xea, 0x84, 0x31, 0xca,
	0x74, 0x68, 0xba, 0x3f, 0x14, 0x28, 0x56, 0x1d, 0x9c, 0x8f, 0x07, 0x85, 0xeb, 0x87, 0xdb, 0x94,
	0x05, 0xae, 0xf0, 0x69, 0xa8, 0x92, 0xe6, 0x3e, 0xe7, 0x01, 0xee, 0xb9, 0xcc, 0xc5, 0x28, 0x61,
	0xdc, 0xb8, 0x0b, 0xc5, 0x06, 0x0d, 0x82, 0x56, 0xe8, 0x8b, 0x03, 0x27, 0x50, 0xba, 0x7c, 0xcf,
	0x1c, 0x39, 0x35, 0x72, 0x76, 0xf4, 0xe2, 0xb4, 0xa5, 0x5b, 0xd1, 0xf2, 0xfc, 0x50, 0x90, 0x26,
	0x61, 0x9b, 0xf2, 0x64, 0x4f, 0x75, 0x70, 0xaa, 0x9d, 0x35, 0xcf, 0x58, 0x04, 0x33, 0x81, 0xcc,
	0x09, 0x5b, 0x3b, 0x3b, 0xe6, 0xd7, 0x3c, 0x52, 0x16, 0xec, 0xd2, 0x00, 0xaa, 0x86, 0x51, 0x63,
	0x09, 0xc6, 0xba, 0x48, 0xac, 0xff, 0x57, 0x7a, 0xfd, 0xd1, 0x0e, 0x00, 0x2b, 0x9f, 0x87, 0xa9,
	0x5e, 0xbc, 0x2a, 0xf9, 0x4d, 0x95, 0x9c, 0xec, 0x49, 0x8c, 0x8a, 0x6d, 0xc0, 0x7f, 0xfa, 0xa7,
	0x06, 0x4e, 0x26, 0x6c, 0xf6, 0xf4, 0x9d, 0x49, 0xaf, 0x5b, 0xea, 0xc3, 0x76, 0x7a, 0xbf, 0x01,
	0xff, 0x1f, 0x41, 0xaa, 0xc4, 0x7c, 0x57, 0x62, 0x2a, 0x89, 0xe8, 0x48, 0xd6, 0x26, 0x54, 0x38,
	0x09, 0x85, 0x43, 0x99, 0xc3, 0x48, 0x83, 0xf8, 0x7b, 0xc4, 0x73, 0xf4, 0x05, 0x73, 0xf3, 0xef,
	0x74, 0x61, 0x65, 0x89, 0xae, 0x33, 0x5b, 0x63, 0xdb, 0x2f, 0xce, 0x58, 0x85, 0xd9, 0x23, 0x79,
	0x95, 0xb6, 0x1f, 0x4a, 0x5b, 0x35, 0x99, 0x20, 0x12, 0x77, 0x15, 0xfe, 0xd9, 0x66, 0x34, 0x70,
	0x3c, 0x57, 0x10, 0x33, 0x1b, 0x89, 0x99, 0x89, 0x89, 0x11, 0x3e, 0xb2, 0x0a, 0x37, 0xd8, 0x55,
	0x72, 0x0a, 0x32, 0xff, 0x26, 0xa6, 0x1b, 0x67, 0x60, 0xa2, 0x83, 0x55, 0x05, 0x7f, 0xaa, 0x82,
	0x63, 0xed, 0x94, 0xa8, 0xc4, 0x15, 0xc8, 0x0b, 0xaa, 0x0a, 0xe4, 0x86, 0x29, 0x90, 0x13, 0x34,
	0xa2, 0x3f, 0x0d, 0x63, 0x1a, 0xa7, 0xc8, 0x7f, 0x29, 0x72, 0x50, 0xe1, 0x88, 0xfa, 0x19, 0xcc,
	0x52, 0xe6, 0xe1, 0x6d, 0x6c, 0x1d, 0xb4, 0x5b, 0x57, 0x00, 0x37, 0xf4, 0x1c, 0x49, 0x6b, 0xe6,
	0xd3, 0xe7, 0x5b, 0x89, 0x28, 0x56, 0x0e, 0xf4, 0x5c, 0x24, 0xf9, 0x72, 0xe8, 0x3d, 0x40, 0x34,
	0xba, 0x68, 0xfe, 0x78, 0x7e, 0xa5, 0xec, 0xb7, 0x52, 0x36, 0x73, 0x24, 0x91, 0x14, 0x3b, 0xf7,
	0xa5, 0x00, 0x05, 0x9b, 0xf0, 0x5d, 0x1a, 0x72, 0x62, 0x5c, 0x80, 0x6c, 0xe4, 0x7f, 0xed, 0xc8,
	0xaa, 0xd5, 0xbf, 0x5c, 0xd4, 0x6e, 0xb8, 0x25, 0xff, 0xda, 0x2a, 0xd1, 0x78, 0x0c, 0xff, 0x4a,
	0xe7, 0x3b, 0x3d, 0xd6, 0x47, 0x3b, 0x65, 0x10, 0x6c, 0xc5, 0xc0, 0xf1, 0x05, 0xb1, 0x8e, 0xe7,
	0xb5, 0xee, 0xd9, 0x9e, 0x0c, 0xfa, 0x7f, 0x40, 0x7f, 0xe7, 0x75, 0x77, 0x68, 0x14, 0xc9, 0x38,
	0x3b, 0xc0, 0xa8, 0xf6, 0x91, 0xee, 0xcc, 0x6e, 0xa7, 0x1b, 0x77, 0x20, 0xc3, 0xe8, 0x3e, 0xbe,
	0x62, 0x89, 0x5a, 0xb4, 0x86, 0xdf, 0x90, 0x56, 0x7b, 0x12, 0x96, 0x4d, 0xf7, 0x6d, 0x49, 0x52,
	0x3d, 0xcc, 0x41, 0x06, 0x0f, 0x46, 0x19, 0x72, 0x78, 0x94, 0xae, 0x7d, 0x59, 0xc3, 0xe1, 0x64,
	0xed, 0x2c, 0x1e, 0xd1, 0x89, 0xb8, 0xd2, 0xf0, 0x3d, 0xc4, 0x17, 0x91, 0xf9, 0xaa, 0xd6, 0x3f,
	0x41, 0x7d, 0xc5, 0x5c, 0x30, 0x34, 0xa2, 0x5e, 0x69, 0x82, 0xae, 0xf6, 0xaf, 0x27, 0x34, 0xcf,
	0x44, 0xfb, 0x42, 0xf1, 0xe9, 0x89, 0x16, 0x37, 0x0f, 0x6b, 0xe9, 0x4f, 0x65, 0x5c, 0x63, 0x36,
	0x22, 0x88, 0x71, 0x1f, 0xca, 0x09, 0x8a, 0xa4, 0xf2, 0xd7, 0x43, 0x90, 0x15, 0x07, 0x54, 0x61,
	0x93, 0x97, 0xbb, 0x57, 0xf1, 0x26, 0xbd, 0xb1, 0xce, 0x3d, 0xd4, 0xa1, 0x14, 0x59, 0x71, 0x60,
	0x3a, 0x6f, 0xd3, 0x49, 0x8a, 0x12, 0x19, 0x9f, 0xcf, 0xf5, 0xd8, 0xe2, 0x7e, 0x57, 0x3b, 0xe1,
	0xe6, 0x5e, 0x81, 0x89, 0x2e, 0x41, 0x88, 0xff, 0x96, 0xcc, 0xf7, 0xe9, 0x52, 0xc6, 0x3b, 0x90,
	0x1a, 0x22, 0x70, 0xbe, 0xa5, 0x64, 0x57, 0x7f, 0xa8, 0x0d, 0xb3, 0x48, 0x8c, 0x60, 0xd0, 0xd1,
	0x0f, 0xc1, 0x4c, 0x1c, 0x94, 0xec, 0xf1, 0xe3, 0x10, 0x3d, 0x96, 0x12, 0x86, 0x85, 0xdd, 0x3e,
	0x82, 0x6a, 0xf2, 0x7e, 0x68, 0x3c, 0x77, 0x99, 0xf9, 0x29, 0xbd, 0xf3, 0xf2, 0xa0, 0xd6, 0x55,
	0x84, 0xae, 0x3c, 0x85, 0x69, 0x9f, 0xc6, 0x7c, 0xd5, 0xfd, 0x6c, 0x79, 0xb2, 0xd4, 0xa4, 0xdc,
	0x7b, 0xd1, 0x8e, 0x7b, 0x27, 0xfd, 0xb2, 0xd9, 0xca, 0x45, 0x1f, 0x0f, 0x97, 0xfe, 0x04, 0x00,
	0x00, 0xff, 0xff, 0xf1, 0xa5, 0xcc, 0xa4, 0x19, 0x09, 0x00, 0x00,
}
