// Code generated by protoc-gen-go.
// source: dstore/engine/procedures/im_GetNodeCharacteristics_Ad.proto
// DO NOT EDIT!

/*
Package im_GetNodeCharacteristics_Ad is a generated protocol buffer package.

It is generated from these files:
	dstore/engine/procedures/im_GetNodeCharacteristics_Ad.proto

It has these top-level messages:
	Parameters
	Response
*/
package im_GetNodeCharacteristics_Ad

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import dstore_values "gosdk.dstore.de/values"
import dstore_engine_error "gosdk.dstore.de/engine/error"
import dstore_engine_message "gosdk.dstore.de/engine/message"
import dstore_engine_metainformation "gosdk.dstore.de/engine/metainformation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Parameters struct {
	IncludeCurrencyInformation      *dstore_values.BooleanValue `protobuf:"bytes,1,opt,name=include_currency_information,json=includeCurrencyInformation" json:"include_currency_information,omitempty"`
	IncludeCurrencyInformationNull  bool                        `protobuf:"varint,1001,opt,name=include_currency_information_null,json=includeCurrencyInformationNull" json:"include_currency_information_null,omitempty"`
	IncludeCurrencyInformations     *dstore_values.BooleanValue `protobuf:"bytes,2,opt,name=include_currency_informations,json=includeCurrencyInformations" json:"include_currency_informations,omitempty"`
	IncludeCurrencyInformationsNull bool                        `protobuf:"varint,1002,opt,name=include_currency_informations_null,json=includeCurrencyInformationsNull" json:"include_currency_informations_null,omitempty"`
	OnlyIdsInTableOneId             *dstore_values.BooleanValue `protobuf:"bytes,3,opt,name=only_ids_in_table_one_id,json=onlyIdsInTableOneId" json:"only_ids_in_table_one_id,omitempty"`
	OnlyIdsInTableOneIdNull         bool                        `protobuf:"varint,1003,opt,name=only_ids_in_table_one_id_null,json=onlyIdsInTableOneIdNull" json:"only_ids_in_table_one_id_null,omitempty"`
	NodeCharacCategoryId            *dstore_values.IntegerValue `protobuf:"bytes,4,opt,name=node_charac_category_id,json=nodeCharacCategoryId" json:"node_charac_category_id,omitempty"`
	NodeCharacCategoryIdNull        bool                        `protobuf:"varint,1004,opt,name=node_charac_category_id_null,json=nodeCharacCategoryIdNull" json:"node_charac_category_id_null,omitempty"`
	SortOrder                       *dstore_values.IntegerValue `protobuf:"bytes,5,opt,name=sort_order,json=sortOrder" json:"sort_order,omitempty"`
	SortOrderNull                   bool                        `protobuf:"varint,1005,opt,name=sort_order_null,json=sortOrderNull" json:"sort_order_null,omitempty"`
	GetCategoryInformation          *dstore_values.BooleanValue `protobuf:"bytes,6,opt,name=get_category_information,json=getCategoryInformation" json:"get_category_information,omitempty"`
	GetCategoryInformationNull      bool                        `protobuf:"varint,1006,opt,name=get_category_information_null,json=getCategoryInformationNull" json:"get_category_information_null,omitempty"`
}

func (m *Parameters) Reset()                    { *m = Parameters{} }
func (m *Parameters) String() string            { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()               {}
func (*Parameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Parameters) GetIncludeCurrencyInformation() *dstore_values.BooleanValue {
	if m != nil {
		return m.IncludeCurrencyInformation
	}
	return nil
}

func (m *Parameters) GetIncludeCurrencyInformations() *dstore_values.BooleanValue {
	if m != nil {
		return m.IncludeCurrencyInformations
	}
	return nil
}

func (m *Parameters) GetOnlyIdsInTableOneId() *dstore_values.BooleanValue {
	if m != nil {
		return m.OnlyIdsInTableOneId
	}
	return nil
}

func (m *Parameters) GetNodeCharacCategoryId() *dstore_values.IntegerValue {
	if m != nil {
		return m.NodeCharacCategoryId
	}
	return nil
}

func (m *Parameters) GetSortOrder() *dstore_values.IntegerValue {
	if m != nil {
		return m.SortOrder
	}
	return nil
}

func (m *Parameters) GetGetCategoryInformation() *dstore_values.BooleanValue {
	if m != nil {
		return m.GetCategoryInformation
	}
	return nil
}

type Response struct {
	Error           *dstore_engine_error.Error                       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	MetaInformation []*dstore_engine_metainformation.MetaInformation `protobuf:"bytes,2,rep,name=meta_information,json=metaInformation" json:"meta_information,omitempty"`
	Message         []*dstore_engine_message.Message                 `protobuf:"bytes,3,rep,name=message" json:"message,omitempty"`
	Row             []*Response_Row                                  `protobuf:"bytes,4,rep,name=row" json:"row,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetError() *dstore_engine_error.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetMetaInformation() []*dstore_engine_metainformation.MetaInformation {
	if m != nil {
		return m.MetaInformation
	}
	return nil
}

func (m *Response) GetMessage() []*dstore_engine_message.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Response) GetRow() []*Response_Row {
	if m != nil {
		return m.Row
	}
	return nil
}

type Response_Row struct {
	RowId                         int32                       `protobuf:"varint,10000,opt,name=row_id,json=rowId" json:"row_id,omitempty"`
	Deleteable                    *dstore_values.BooleanValue `protobuf:"bytes,10001,opt,name=deleteable" json:"deleteable,omitempty"`
	PredecessorCategoryId         *dstore_values.IntegerValue `protobuf:"bytes,10002,opt,name=predecessor_category_id,json=predecessorCategoryId" json:"predecessor_category_id,omitempty"`
	CharacteristicDescription     *dstore_values.StringValue  `protobuf:"bytes,10003,opt,name=characteristic_description,json=characteristicDescription" json:"characteristic_description,omitempty"`
	ValueLanguage                 *dstore_values.StringValue  `protobuf:"bytes,10004,opt,name=value_language,json=valueLanguage" json:"value_language,omitempty"`
	FieldTypeId                   *dstore_values.IntegerValue `protobuf:"bytes,10005,opt,name=field_type_id,json=fieldTypeId" json:"field_type_id,omitempty"`
	InNetto                       *dstore_values.IntegerValue `protobuf:"bytes,10006,opt,name=in_netto,json=inNetto" json:"in_netto,omitempty"`
	NodeCharacteristicId          *dstore_values.IntegerValue `protobuf:"bytes,10007,opt,name=node_characteristic_id,json=nodeCharacteristicId" json:"node_characteristic_id,omitempty"`
	SortNo                        *dstore_values.IntegerValue `protobuf:"bytes,10008,opt,name=sort_no,json=sortNo" json:"sort_no,omitempty"`
	KeepPropertiesHistoryInHours  *dstore_values.IntegerValue `protobuf:"bytes,10009,opt,name=keep_properties_history_in_hours,json=keepPropertiesHistoryInHours" json:"keep_properties_history_in_hours,omitempty"`
	PredefinedValues              *dstore_values.BooleanValue `protobuf:"bytes,10010,opt,name=predefined_values,json=predefinedValues" json:"predefined_values,omitempty"`
	NodeCharacCategoryId          *dstore_values.IntegerValue `protobuf:"bytes,10011,opt,name=node_charac_category_id,json=nodeCharacCategoryId" json:"node_charac_category_id,omitempty"`
	HasCurrencyUnitValsAreNetVals *dstore_values.IntegerValue `protobuf:"bytes,10012,opt,name=has_currency_unit_vals_are_net_vals,json=hasCurrencyUnitValsAreNetVals" json:"has_currency_unit_vals_are_net_vals,omitempty"`
	CategorySortNo                *dstore_values.IntegerValue `protobuf:"bytes,10013,opt,name=category_sort_no,json=categorySortNo" json:"category_sort_no,omitempty"`
	UnitId                        *dstore_values.IntegerValue `protobuf:"bytes,10014,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	IsUnique                      *dstore_values.BooleanValue `protobuf:"bytes,10015,opt,name=is_unique,json=isUnique" json:"is_unique,omitempty"`
	ValueLanguageId               *dstore_values.IntegerValue `protobuf:"bytes,10016,opt,name=value_language_id,json=valueLanguageId" json:"value_language_id,omitempty"`
	CategoryDescription           *dstore_values.StringValue  `protobuf:"bytes,10017,opt,name=category_description,json=categoryDescription" json:"category_description,omitempty"`
	Recursive                     *dstore_values.BooleanValue `protobuf:"bytes,10018,opt,name=recursive" json:"recursive,omitempty"`
}

func (m *Response_Row) Reset()                    { *m = Response_Row{} }
func (m *Response_Row) String() string            { return proto.CompactTextString(m) }
func (*Response_Row) ProtoMessage()               {}
func (*Response_Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Response_Row) GetDeleteable() *dstore_values.BooleanValue {
	if m != nil {
		return m.Deleteable
	}
	return nil
}

func (m *Response_Row) GetPredecessorCategoryId() *dstore_values.IntegerValue {
	if m != nil {
		return m.PredecessorCategoryId
	}
	return nil
}

func (m *Response_Row) GetCharacteristicDescription() *dstore_values.StringValue {
	if m != nil {
		return m.CharacteristicDescription
	}
	return nil
}

func (m *Response_Row) GetValueLanguage() *dstore_values.StringValue {
	if m != nil {
		return m.ValueLanguage
	}
	return nil
}

func (m *Response_Row) GetFieldTypeId() *dstore_values.IntegerValue {
	if m != nil {
		return m.FieldTypeId
	}
	return nil
}

func (m *Response_Row) GetInNetto() *dstore_values.IntegerValue {
	if m != nil {
		return m.InNetto
	}
	return nil
}

func (m *Response_Row) GetNodeCharacteristicId() *dstore_values.IntegerValue {
	if m != nil {
		return m.NodeCharacteristicId
	}
	return nil
}

func (m *Response_Row) GetSortNo() *dstore_values.IntegerValue {
	if m != nil {
		return m.SortNo
	}
	return nil
}

func (m *Response_Row) GetKeepPropertiesHistoryInHours() *dstore_values.IntegerValue {
	if m != nil {
		return m.KeepPropertiesHistoryInHours
	}
	return nil
}

func (m *Response_Row) GetPredefinedValues() *dstore_values.BooleanValue {
	if m != nil {
		return m.PredefinedValues
	}
	return nil
}

func (m *Response_Row) GetNodeCharacCategoryId() *dstore_values.IntegerValue {
	if m != nil {
		return m.NodeCharacCategoryId
	}
	return nil
}

func (m *Response_Row) GetHasCurrencyUnitValsAreNetVals() *dstore_values.IntegerValue {
	if m != nil {
		return m.HasCurrencyUnitValsAreNetVals
	}
	return nil
}

func (m *Response_Row) GetCategorySortNo() *dstore_values.IntegerValue {
	if m != nil {
		return m.CategorySortNo
	}
	return nil
}

func (m *Response_Row) GetUnitId() *dstore_values.IntegerValue {
	if m != nil {
		return m.UnitId
	}
	return nil
}

func (m *Response_Row) GetIsUnique() *dstore_values.BooleanValue {
	if m != nil {
		return m.IsUnique
	}
	return nil
}

func (m *Response_Row) GetValueLanguageId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ValueLanguageId
	}
	return nil
}

func (m *Response_Row) GetCategoryDescription() *dstore_values.StringValue {
	if m != nil {
		return m.CategoryDescription
	}
	return nil
}

func (m *Response_Row) GetRecursive() *dstore_values.BooleanValue {
	if m != nil {
		return m.Recursive
	}
	return nil
}

func init() {
	proto.RegisterType((*Parameters)(nil), "dstore.engine.im_GetNodeCharacteristics_Ad.Parameters")
	proto.RegisterType((*Response)(nil), "dstore.engine.im_GetNodeCharacteristics_Ad.Response")
	proto.RegisterType((*Response_Row)(nil), "dstore.engine.im_GetNodeCharacteristics_Ad.Response.Row")
}

func init() {
	proto.RegisterFile("dstore/engine/procedures/im_GetNodeCharacteristics_Ad.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 981 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0x5b, 0x6f, 0xdc, 0x44,
	0x14, 0x56, 0x1b, 0x72, 0x3b, 0x25, 0x4d, 0x3a, 0x29, 0x89, 0xbb, 0x49, 0x4a, 0x48, 0x1f, 0x40,
	0x3c, 0x6c, 0x10, 0x08, 0x51, 0x0a, 0x02, 0xda, 0x70, 0xc9, 0xa2, 0xd6, 0xad, 0xdc, 0x04, 0x89,
	0x4a, 0xd5, 0xc8, 0xb1, 0x4f, 0x76, 0x47, 0x75, 0x66, 0x96, 0x19, 0x6f, 0xab, 0xfe, 0x8b, 0x72,
	0xbf, 0x5f, 0xff, 0x14, 0xbf, 0x81, 0xeb, 0x2b, 0xaf, 0x9c, 0x99, 0xf1, 0xee, 0xda, 0x21, 0xbb,
	0xeb, 0xf2, 0x92, 0xec, 0xcc, 0x9c, 0xef, 0x3b, 0xdf, 0xf8, 0x9c, 0xf3, 0xd9, 0xf0, 0x5a, 0x6a,
	0x72, 0xa5, 0x71, 0x1b, 0x65, 0x5b, 0x48, 0xdc, 0xee, 0x6a, 0x95, 0x60, 0xda, 0xd3, 0x68, 0xb6,
	0xc5, 0x11, 0x7f, 0x0f, 0xf3, 0x50, 0xa5, 0xb8, 0xd3, 0x89, 0x75, 0x9c, 0xe4, 0xa8, 0x85, 0xc9,
	0x45, 0x62, 0xf8, 0xd5, 0xb4, 0x49, 0x71, 0xb9, 0x62, 0xcf, 0x7b, 0x70, 0xd3, 0x83, 0x9b, 0xe3,
	0x10, 0x8d, 0xe5, 0x22, 0xd1, 0xfd, 0x38, 0xeb, 0xa1, 0xf1, 0x04, 0x8d, 0x0b, 0xd5, 0xec, 0xa8,
	0xb5, 0xd2, 0xc5, 0xd1, 0x5a, 0xf5, 0xe8, 0x08, 0x8d, 0x89, 0xdb, 0x58, 0x1c, 0x5e, 0x3a, 0x7e,
	0x98, 0xc7, 0x42, 0x1e, 0x2a, 0x7d, 0x14, 0xe7, 0x42, 0x49, 0x1f, 0xb4, 0xf5, 0x68, 0x16, 0xe0,
	0x16, 0xe9, 0xa0, 0x53, 0xd4, 0x86, 0xdd, 0x85, 0x75, 0x21, 0x93, 0xac, 0x97, 0x22, 0x4f, 0x7a,
	0x5a, 0xa3, 0x4c, 0x1e, 0xf2, 0x12, 0x28, 0x38, 0xb5, 0x79, 0xea, 0xb9, 0x33, 0x2f, 0xae, 0x35,
	0x8b, 0x3b, 0x15, 0x3a, 0x0f, 0x94, 0xca, 0x30, 0x96, 0x1f, 0xd8, 0x55, 0xd4, 0x28, 0x08, 0x76,
	0x0a, 0x7c, 0x6b, 0x08, 0x67, 0xef, 0xc3, 0x33, 0xe3, 0xe8, 0xb9, 0xec, 0x65, 0x59, 0xf0, 0xdb,
	0x2c, 0x25, 0x99, 0x8b, 0x2e, 0x8e, 0xe6, 0x09, 0x29, 0x8c, 0x71, 0xd8, 0x18, 0xc7, 0x65, 0x82,
	0xd3, 0x93, 0xb5, 0xae, 0x8d, 0xce, 0x61, 0xd8, 0x75, 0xd8, 0x1a, 0x9b, 0xc0, 0xab, 0xfd, 0xdd,
	0xab, 0x7d, 0x7a, 0x0c, 0x93, 0x93, 0x1b, 0x41, 0xa0, 0x64, 0x46, 0x0c, 0xa9, 0x21, 0x16, 0x9e,
	0xc7, 0x07, 0x19, 0x72, 0x25, 0x91, 0x36, 0x82, 0xa9, 0xc9, 0x4a, 0x97, 0x2d, 0xb8, 0x95, 0x9a,
	0x96, 0xdc, 0xb3, 0xc8, 0x9b, 0x12, 0x5b, 0x29, 0x7b, 0x13, 0x36, 0x46, 0x71, 0x7a, 0x71, 0x7f,
	0x78, 0x71, 0xab, 0x27, 0x80, 0x0b, 0x51, 0xab, 0x52, 0xd9, 0xfb, 0xb9, 0x56, 0xe4, 0x49, 0x9c,
	0x63, 0x5b, 0x69, 0x4b, 0x18, 0x3c, 0x71, 0xa2, 0x26, 0x21, 0x29, 0x02, 0xb5, 0xd7, 0x74, 0x5e,
	0x0e, 0xba, 0x78, 0xa7, 0x40, 0x3a, 0x51, 0xeb, 0x23, 0x38, 0xbd, 0xa6, 0x3f, 0xbd, 0xa6, 0xe0,
	0x24, 0xb0, 0x13, 0x75, 0x05, 0xc0, 0x28, 0x9d, 0x73, 0xa5, 0x53, 0xd4, 0xc1, 0xf4, 0x64, 0x1d,
	0xf3, 0x36, 0xfc, 0xa6, 0x8d, 0x66, 0xcf, 0xc2, 0xe2, 0x10, 0xeb, 0xf3, 0xfd, 0xe5, 0xf3, 0x2d,
	0x0c, 0x82, 0x5c, 0x92, 0x7d, 0x08, 0xda, 0x98, 0x97, 0xd4, 0x95, 0x9a, 0x7c, 0x66, 0x72, 0x39,
	0x56, 0x08, 0x3c, 0x90, 0x5d, 0x6a, 0xf0, 0x6b, 0xb0, 0x31, 0x8a, 0xd6, 0xab, 0xf9, 0xdb, 0xab,
	0x69, 0x9c, 0x8c, 0xb7, 0xd2, 0xb6, 0xfe, 0x79, 0x12, 0xe6, 0x22, 0x34, 0x5d, 0xea, 0x1c, 0x64,
	0x2f, 0xc0, 0xb4, 0x1b, 0xf8, 0x62, 0xf2, 0x1a, 0xcd, 0xaa, 0x9b, 0x78, 0x33, 0x78, 0xc7, 0xfe,
	0x8d, 0x7c, 0x20, 0xfb, 0x10, 0x96, 0xec, 0xa8, 0x57, 0x6e, 0x74, 0x7a, 0x73, 0x8a, 0xc0, 0xcd,
	0x63, 0xe0, 0xe3, 0x8e, 0x70, 0x83, 0xd6, 0x25, 0x31, 0xd1, 0xe2, 0x51, 0x75, 0x83, 0x5d, 0x86,
	0xd9, 0xc2, 0x62, 0xa8, 0x65, 0x2d, 0xe3, 0xc5, 0xff, 0x30, 0x7a, 0x03, 0xba, 0xe1, 0xff, 0x47,
	0xfd, 0x70, 0x1a, 0xfc, 0x29, 0xad, 0x1e, 0x50, 0x53, 0x59, 0xd4, 0xe5, 0x66, 0x7d, 0x4b, 0x6c,
	0xf6, 0x9f, 0x44, 0x33, 0x52, 0x0f, 0x22, 0x4b, 0xd2, 0xf8, 0x15, 0x60, 0x8a, 0x16, 0x6c, 0x05,
	0x66, 0x68, 0x69, 0x7b, 0xf5, 0x51, 0x48, 0x0f, 0x67, 0x3a, 0x9a, 0xa6, 0x25, 0x35, 0xe0, 0xeb,
	0x00, 0x29, 0x66, 0xe4, 0x67, 0xb6, 0xd7, 0x83, 0x8f, 0xc3, 0xc9, 0xd5, 0x2c, 0xc5, 0xb3, 0x3d,
	0x58, 0xed, 0x6a, 0x4c, 0x31, 0x21, 0xe5, 0x4a, 0x57, 0x46, 0xe2, 0x93, 0x70, 0x72, 0x2f, 0x3e,
	0x55, 0x02, 0x97, 0x86, 0xe2, 0x0e, 0x34, 0x92, 0xca, 0xdd, 0x78, 0x8a, 0x26, 0xd1, 0xa2, 0xeb,
	0xca, 0xf3, 0x69, 0x58, 0x2d, 0x6e, 0x41, 0x6c, 0x72, 0x2d, 0x64, 0xdb, 0xf3, 0x5e, 0xa8, 0xc2,
	0xdf, 0x1e, 0xa2, 0xa9, 0xe7, 0xce, 0x3a, 0x00, 0xcf, 0x62, 0xd9, 0xee, 0xd9, 0xe2, 0x7c, 0x36,
	0x99, 0x6f, 0xc1, 0xed, 0x5d, 0x2f, 0x10, 0xec, 0x2d, 0x58, 0x38, 0x14, 0x98, 0xa5, 0x3c, 0x7f,
	0xd8, 0x75, 0x96, 0xf4, 0x79, 0x8d, 0xbb, 0x9e, 0x71, 0x90, 0x3d, 0x42, 0xd0, 0x0d, 0x5f, 0x81,
	0x39, 0xb2, 0x20, 0x89, 0x79, 0xae, 0x82, 0x2f, 0x6a, 0x80, 0x67, 0x85, 0x0c, 0x6d, 0x30, 0x79,
	0xd0, 0x4a, 0xc9, 0x2f, 0x06, 0xcf, 0x87, 0x34, 0x7c, 0x19, 0x3e, 0x96, 0x07, 0xf5, 0xa1, 0x24,
	0xe6, 0x65, 0x98, 0x75, 0x36, 0x20, 0x55, 0xf0, 0x55, 0x0d, 0x92, 0x19, 0x1b, 0x1c, 0x2a, 0x96,
	0xc2, 0xe6, 0x3d, 0xc4, 0x2e, 0xa7, 0x57, 0x63, 0x17, 0x75, 0x2e, 0xd0, 0xf0, 0x8e, 0xb0, 0x30,
	0x3b, 0xc8, 0xbc, 0xa3, 0x7a, 0xda, 0x04, 0x5f, 0xd7, 0xe0, 0x5b, 0xb7, 0x2c, 0xb7, 0x06, 0x24,
	0xbb, 0x9e, 0xa3, 0x25, 0x77, 0x2d, 0x03, 0x6b, 0xc1, 0x39, 0xd7, 0x24, 0x87, 0xd4, 0xfb, 0x29,
	0xf7, 0xf8, 0xe0, 0x9b, 0x1a, 0x6d, 0xba, 0x34, 0x84, 0xb9, 0x0d, 0xc3, 0x6e, 0x8f, 0xf6, 0xef,
	0x6f, 0xc3, 0xff, 0x6b, 0xe0, 0x1d, 0xb8, 0xd4, 0x89, 0xcd, 0xf0, 0x9d, 0xd7, 0x93, 0x22, 0xb7,
	0x32, 0x0d, 0x8f, 0x35, 0xda, 0x0a, 0xbb, 0x45, 0xf0, 0x5d, 0x8d, 0x04, 0x1b, 0x44, 0xd4, 0x7f,
	0x23, 0xee, 0x13, 0x0d, 0xed, 0x9a, 0xab, 0x1a, 0xa9, 0xf0, 0xf6, 0x17, 0x7b, 0x17, 0x96, 0x06,
	0x92, 0xfb, 0xf5, 0xfa, 0xbe, 0x06, 0xed, 0xd9, 0x3e, 0xea, 0xb6, 0xaf, 0x1b, 0x95, 0xdb, 0x89,
	0xa4, 0x6b, 0xff, 0x50, 0xa7, 0xdc, 0x36, 0x98, 0x2e, 0xfa, 0x2a, 0xcc, 0x0b, 0x63, 0xaf, 0xf7,
	0x51, 0x0f, 0x83, 0x1f, 0x6b, 0x14, 0x60, 0x4e, 0x98, 0x7d, 0x17, 0xcd, 0x76, 0xe1, 0x5c, 0x75,
	0xe6, 0x6c, 0xee, 0x9f, 0x6a, 0xe4, 0x5e, 0xac, 0xcc, 0x1d, 0x89, 0x08, 0xe1, 0xfc, 0xe0, 0x19,
	0x94, 0x3d, 0xe1, 0xe7, 0xc9, 0x33, 0xbc, 0xdc, 0x07, 0x96, 0xdd, 0xe0, 0x0a, 0xcc, 0x6b, 0xa4,
	0xda, 0x19, 0x71, 0x1f, 0x83, 0x5f, 0x6a, 0x5c, 0x6a, 0x18, 0x7e, 0xed, 0x2e, 0xac, 0x09, 0x75,
	0xcc, 0x9c, 0x87, 0x1f, 0xbb, 0x77, 0xde, 0x68, 0x2b, 0x93, 0xde, 0xeb, 0x9f, 0xa7, 0x8f, 0xfb,
	0x3d, 0x7c, 0x30, 0xe3, 0x3e, 0x39, 0x5f, 0xfa, 0x37, 0x00, 0x00, 0xff, 0xff, 0x11, 0x72, 0xeb,
	0x62, 0x4f, 0x0b, 0x00, 0x00,
}
