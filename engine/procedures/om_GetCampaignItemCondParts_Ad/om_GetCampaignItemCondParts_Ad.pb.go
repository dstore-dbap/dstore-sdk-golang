// Code generated by protoc-gen-go.
// source: dstore/engine/procedures/om_GetCampaignItemCondParts_Ad.proto
// DO NOT EDIT!

/*
Package om_GetCampaignItemCondParts_Ad is a generated protocol buffer package.

It is generated from these files:
	dstore/engine/procedures/om_GetCampaignItemCondParts_Ad.proto

It has these top-level messages:
	Parameters
	Response
*/
package om_GetCampaignItemCondParts_Ad

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import dstore_values "gosdk.dstore.de/values"
import dstore_engine_error "gosdk.dstore.de/engine/error"
import dstore_engine_message "gosdk.dstore.de/engine/message"
import dstore_engine_metainformation "gosdk.dstore.de/engine/metainformation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Parameters struct {
	ConditionId             *dstore_values.IntegerValue `protobuf:"bytes,1,opt,name=condition_id,json=conditionId" json:"condition_id,omitempty"`
	ConditionIdNull         bool                        `protobuf:"varint,1001,opt,name=condition_id_null,json=conditionIdNull" json:"condition_id_null,omitempty"`
	ItemConditionPartId     *dstore_values.IntegerValue `protobuf:"bytes,2,opt,name=item_condition_part_id,json=itemConditionPartId" json:"item_condition_part_id,omitempty"`
	ItemConditionPartIdNull bool                        `protobuf:"varint,1002,opt,name=item_condition_part_id_null,json=itemConditionPartIdNull" json:"item_condition_part_id_null,omitempty"`
}

func (m *Parameters) Reset()                    { *m = Parameters{} }
func (m *Parameters) String() string            { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()               {}
func (*Parameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Parameters) GetConditionId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ConditionId
	}
	return nil
}

func (m *Parameters) GetItemConditionPartId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ItemConditionPartId
	}
	return nil
}

type Response struct {
	Error           *dstore_engine_error.Error                       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	MetaInformation []*dstore_engine_metainformation.MetaInformation `protobuf:"bytes,2,rep,name=meta_information,json=metaInformation" json:"meta_information,omitempty"`
	Message         []*dstore_engine_message.Message                 `protobuf:"bytes,3,rep,name=message" json:"message,omitempty"`
	Row             []*Response_Row                                  `protobuf:"bytes,4,rep,name=row" json:"row,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetError() *dstore_engine_error.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetMetaInformation() []*dstore_engine_metainformation.MetaInformation {
	if m != nil {
		return m.MetaInformation
	}
	return nil
}

func (m *Response) GetMessage() []*dstore_engine_message.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Response) GetRow() []*Response_Row {
	if m != nil {
		return m.Row
	}
	return nil
}

type Response_Row struct {
	RowId                     int32                       `protobuf:"varint,10000,opt,name=row_id,json=rowId" json:"row_id,omitempty"`
	Operator1                 *dstore_values.StringValue  `protobuf:"bytes,10001,opt,name=operator1" json:"operator1,omitempty"`
	Condition1                *dstore_values.StringValue  `protobuf:"bytes,10002,opt,name=condition1" json:"condition1,omitempty"`
	Condition2                *dstore_values.StringValue  `protobuf:"bytes,10003,opt,name=condition2" json:"condition2,omitempty"`
	Operator2                 *dstore_values.StringValue  `protobuf:"bytes,10004,opt,name=operator2" json:"operator2,omitempty"`
	RecursiveEvaluation       *dstore_values.IntegerValue `protobuf:"bytes,10005,opt,name=recursive_evaluation,json=recursiveEvaluation" json:"recursive_evaluation,omitempty"`
	DomainTreeNodeIds         *dstore_values.StringValue  `protobuf:"bytes,10006,opt,name=domain_tree_node_ids,json=domainTreeNodeIds" json:"domain_tree_node_ids,omitempty"`
	NodeCharacteristicId      *dstore_values.IntegerValue `protobuf:"bytes,10007,opt,name=node_characteristic_id,json=nodeCharacteristicId" json:"node_characteristic_id,omitempty"`
	ItemConditionPartId       *dstore_values.IntegerValue `protobuf:"bytes,10008,opt,name=item_condition_part_id,json=itemConditionPartId" json:"item_condition_part_id,omitempty"`
	ExtendedItemCondPartDescr *dstore_values.StringValue  `protobuf:"bytes,10009,opt,name=extended_item_cond_part_descr,json=extendedItemCondPartDescr" json:"extended_item_cond_part_descr,omitempty"`
	MinNumberOfItems          *dstore_values.IntegerValue `protobuf:"bytes,10010,opt,name=min_number_of_items,json=minNumberOfItems" json:"min_number_of_items,omitempty"`
	ToQuantity                *dstore_values.IntegerValue `protobuf:"bytes,10011,opt,name=to_quantity,json=toQuantity" json:"to_quantity,omitempty"`
	FromBasicPriceSum         *dstore_values.DecimalValue `protobuf:"bytes,10012,opt,name=from_basic_price_sum,json=fromBasicPriceSum" json:"from_basic_price_sum,omitempty"`
	MaxNumberOfItems          *dstore_values.IntegerValue `protobuf:"bytes,10013,opt,name=max_number_of_items,json=maxNumberOfItems" json:"max_number_of_items,omitempty"`
	ToBasicPriceSum           *dstore_values.DecimalValue `protobuf:"bytes,10014,opt,name=to_basic_price_sum,json=toBasicPriceSum" json:"to_basic_price_sum,omitempty"`
	LevelIds                  *dstore_values.StringValue  `protobuf:"bytes,10015,opt,name=level_ids,json=levelIds" json:"level_ids,omitempty"`
	ConditionId               *dstore_values.IntegerValue `protobuf:"bytes,10016,opt,name=condition_id,json=conditionId" json:"condition_id,omitempty"`
	ToItemBasicPrice          *dstore_values.DecimalValue `protobuf:"bytes,10017,opt,name=to_item_basic_price,json=toItemBasicPrice" json:"to_item_basic_price,omitempty"`
	FromQuantity              *dstore_values.IntegerValue `protobuf:"bytes,10018,opt,name=from_quantity,json=fromQuantity" json:"from_quantity,omitempty"`
	InheritDepth              *dstore_values.IntegerValue `protobuf:"bytes,10019,opt,name=inherit_depth,json=inheritDepth" json:"inherit_depth,omitempty"`
	FromItemBasicPrice        *dstore_values.DecimalValue `protobuf:"bytes,10020,opt,name=from_item_basic_price,json=fromItemBasicPrice" json:"from_item_basic_price,omitempty"`
}

func (m *Response_Row) Reset()                    { *m = Response_Row{} }
func (m *Response_Row) String() string            { return proto.CompactTextString(m) }
func (*Response_Row) ProtoMessage()               {}
func (*Response_Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Response_Row) GetOperator1() *dstore_values.StringValue {
	if m != nil {
		return m.Operator1
	}
	return nil
}

func (m *Response_Row) GetCondition1() *dstore_values.StringValue {
	if m != nil {
		return m.Condition1
	}
	return nil
}

func (m *Response_Row) GetCondition2() *dstore_values.StringValue {
	if m != nil {
		return m.Condition2
	}
	return nil
}

func (m *Response_Row) GetOperator2() *dstore_values.StringValue {
	if m != nil {
		return m.Operator2
	}
	return nil
}

func (m *Response_Row) GetRecursiveEvaluation() *dstore_values.IntegerValue {
	if m != nil {
		return m.RecursiveEvaluation
	}
	return nil
}

func (m *Response_Row) GetDomainTreeNodeIds() *dstore_values.StringValue {
	if m != nil {
		return m.DomainTreeNodeIds
	}
	return nil
}

func (m *Response_Row) GetNodeCharacteristicId() *dstore_values.IntegerValue {
	if m != nil {
		return m.NodeCharacteristicId
	}
	return nil
}

func (m *Response_Row) GetItemConditionPartId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ItemConditionPartId
	}
	return nil
}

func (m *Response_Row) GetExtendedItemCondPartDescr() *dstore_values.StringValue {
	if m != nil {
		return m.ExtendedItemCondPartDescr
	}
	return nil
}

func (m *Response_Row) GetMinNumberOfItems() *dstore_values.IntegerValue {
	if m != nil {
		return m.MinNumberOfItems
	}
	return nil
}

func (m *Response_Row) GetToQuantity() *dstore_values.IntegerValue {
	if m != nil {
		return m.ToQuantity
	}
	return nil
}

func (m *Response_Row) GetFromBasicPriceSum() *dstore_values.DecimalValue {
	if m != nil {
		return m.FromBasicPriceSum
	}
	return nil
}

func (m *Response_Row) GetMaxNumberOfItems() *dstore_values.IntegerValue {
	if m != nil {
		return m.MaxNumberOfItems
	}
	return nil
}

func (m *Response_Row) GetToBasicPriceSum() *dstore_values.DecimalValue {
	if m != nil {
		return m.ToBasicPriceSum
	}
	return nil
}

func (m *Response_Row) GetLevelIds() *dstore_values.StringValue {
	if m != nil {
		return m.LevelIds
	}
	return nil
}

func (m *Response_Row) GetConditionId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ConditionId
	}
	return nil
}

func (m *Response_Row) GetToItemBasicPrice() *dstore_values.DecimalValue {
	if m != nil {
		return m.ToItemBasicPrice
	}
	return nil
}

func (m *Response_Row) GetFromQuantity() *dstore_values.IntegerValue {
	if m != nil {
		return m.FromQuantity
	}
	return nil
}

func (m *Response_Row) GetInheritDepth() *dstore_values.IntegerValue {
	if m != nil {
		return m.InheritDepth
	}
	return nil
}

func (m *Response_Row) GetFromItemBasicPrice() *dstore_values.DecimalValue {
	if m != nil {
		return m.FromItemBasicPrice
	}
	return nil
}

func init() {
	proto.RegisterType((*Parameters)(nil), "dstore.engine.om_GetCampaignItemCondParts_Ad.Parameters")
	proto.RegisterType((*Response)(nil), "dstore.engine.om_GetCampaignItemCondParts_Ad.Response")
	proto.RegisterType((*Response_Row)(nil), "dstore.engine.om_GetCampaignItemCondParts_Ad.Response.Row")
}

func init() {
	proto.RegisterFile("dstore/engine/procedures/om_GetCampaignItemCondParts_Ad.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 832 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x96, 0xeb, 0x4e, 0xdc, 0x46,
	0x14, 0xc7, 0x05, 0x5b, 0x6e, 0xb3, 0x20, 0x60, 0xd8, 0x52, 0xb3, 0xa8, 0x55, 0x45, 0xbf, 0x54,
	0x6a, 0x65, 0xca, 0xf6, 0x0b, 0x6d, 0x45, 0x5b, 0x6e, 0xaa, 0x56, 0x0d, 0x06, 0x9c, 0x28, 0x52,
	0x22, 0x45, 0x96, 0xb1, 0xcf, 0x2e, 0xa3, 0xac, 0x3d, 0x9b, 0x99, 0x31, 0x90, 0x57, 0xc8, 0xa7,
	0xdc, 0xef, 0xf7, 0xe4, 0x51, 0xf2, 0x2c, 0x91, 0x92, 0xa7, 0xc8, 0x19, 0xdb, 0x7b, 0xf1, 0x42,
	0xb2, 0xde, 0x7c, 0x01, 0xcd, 0xce, 0xf9, 0x9d, 0xf9, 0x9f, 0xf3, 0x3f, 0x63, 0x9b, 0xac, 0xf9,
	0x52, 0x71, 0x01, 0xcb, 0x10, 0xd6, 0x59, 0x08, 0xcb, 0x4d, 0xc1, 0x3d, 0xf0, 0x23, 0x01, 0x72,
	0x99, 0x07, 0xce, 0x7f, 0xa0, 0x36, 0xdd, 0xa0, 0xe9, 0xb2, 0x7a, 0x58, 0x55, 0x10, 0x6c, 0xf2,
	0xd0, 0xdf, 0x73, 0x85, 0x92, 0xce, 0xba, 0x6f, 0x62, 0xa4, 0xe2, 0xf4, 0xd7, 0x04, 0x37, 0x13,
	0xdc, 0xfc, 0x32, 0x53, 0x9e, 0x4b, 0x0f, 0x3b, 0x72, 0x1b, 0x11, 0xc8, 0x24, 0x45, 0x79, 0x21,
	0xab, 0x00, 0x84, 0xe0, 0x22, 0xdd, 0x5a, 0xcc, 0x6e, 0x05, 0x20, 0xa5, 0x5b, 0x87, 0x74, 0xf3,
	0xa7, 0xde, 0x4d, 0xe5, 0xb2, 0xb0, 0xc6, 0x45, 0xe0, 0x2a, 0xc6, 0xc3, 0x24, 0x68, 0xe9, 0xc6,
	0x30, 0x21, 0x78, 0xbc, 0x8b, 0xbb, 0x20, 0x24, 0xfd, 0x9b, 0x4c, 0x7a, 0x28, 0x88, 0xe9, 0x08,
	0x87, 0xf9, 0xc6, 0xd0, 0x8f, 0x43, 0x3f, 0x17, 0x2b, 0x8b, 0x66, 0x5a, 0x45, 0xaa, 0x8b, 0x85,
	0x0a, 0xea, 0x20, 0x2e, 0xea, 0x95, 0x5d, 0x6c, 0x03, 0x55, 0x9f, 0xfe, 0x42, 0x66, 0xbb, 0x79,
	0x27, 0x8c, 0x1a, 0x0d, 0xe3, 0xc3, 0x18, 0x66, 0x19, 0xb7, 0xa7, 0xbb, 0x02, 0x2d, 0xfc, 0x9d,
	0xee, 0x91, 0x79, 0x86, 0x1d, 0x70, 0x3a, 0x44, 0x13, 0x1b, 0xa1, 0x8f, 0x1d, 0xee, 0x7f, 0xec,
	0x1c, 0x4b, 0x9b, 0x17, 0x93, 0xba, 0x83, 0x78, 0xfc, 0x1a, 0x59, 0x3c, 0x3b, 0x63, 0x22, 0xe4,
	0x63, 0x22, 0xe4, 0xbb, 0x33, 0x50, 0x2d, 0x68, 0xe9, 0xfd, 0x14, 0x19, 0xb7, 0x41, 0x36, 0x79,
	0x28, 0x81, 0xfe, 0x46, 0x46, 0xe2, 0x56, 0xa7, 0x3d, 0x28, 0x9b, 0x59, 0x27, 0x13, 0x1b, 0xb6,
	0xf5, 0x5f, 0x3b, 0x09, 0xa4, 0x97, 0xc8, 0x8c, 0x6e, 0xb2, 0xd3, 0xd5, 0x65, 0xac, 0xa4, 0x80,
	0xb0, 0xd9, 0x03, 0xf7, 0x7a, 0xb1, 0x83, 0xeb, 0x6a, 0x67, 0x6d, 0x4f, 0x07, 0xd9, 0x1f, 0xe8,
	0x2a, 0x19, 0x4b, 0xcd, 0x35, 0x0a, 0x71, 0xc6, 0x1f, 0x4e, 0x65, 0x4c, 0xac, 0xdf, 0x49, 0xfe,
	0xdb, 0xad, 0x70, 0x7a, 0x8e, 0x14, 0x04, 0x3f, 0x36, 0xbe, 0x89, 0xa9, 0x3f, 0xcd, 0x41, 0xc6,
	0xd1, 0x6c, 0xf5, 0xc2, 0xb4, 0xf9, 0xb1, 0xad, 0xd3, 0x94, 0xdf, 0x15, 0x49, 0x01, 0x17, 0x74,
	0x9e, 0x8c, 0xe2, 0x52, 0x5b, 0x75, 0xd3, 0xc2, 0xf6, 0x8c, 0xd8, 0x23, 0xb8, 0x44, 0x03, 0xfe,
	0x20, 0x13, 0xbc, 0x09, 0xc2, 0xc5, 0x43, 0x56, 0x8c, 0x5b, 0x56, 0xb6, 0x73, 0xa9, 0x8d, 0x52,
	0x09, 0x16, 0xd6, 0x13, 0x17, 0x3b, 0xd1, 0xf4, 0x2f, 0x42, 0xda, 0xb6, 0xad, 0x18, 0xb7, 0xfb,
	0xb3, 0x5d, 0xe1, 0x19, 0xb8, 0x62, 0xdc, 0x19, 0x04, 0xae, 0x74, 0x8b, 0xae, 0x18, 0x77, 0x07,
	0x10, 0x5d, 0xa1, 0xbb, 0xa4, 0x24, 0xc0, 0x8b, 0x84, 0x64, 0x47, 0xe0, 0x80, 0x8e, 0x4d, 0x6c,
	0xbf, 0x67, 0xe5, 0x98, 0xe0, 0x36, 0xb9, 0xdd, 0x06, 0xd1, 0xae, 0x92, 0xcf, 0x03, 0x1c, 0x0e,
	0x47, 0x09, 0x00, 0x27, 0xe4, 0x3e, 0x60, 0x97, 0xa5, 0x71, 0xbf, 0xbf, 0xac, 0xd9, 0x04, 0xbc,
	0x80, 0x9c, 0x85, 0x58, 0xd5, 0x97, 0xd4, 0x26, 0xf3, 0x71, 0x06, 0xef, 0x10, 0xaf, 0xb8, 0x87,
	0x37, 0x9c, 0x49, 0xc5, 0x3c, 0x6d, 0xdb, 0x83, 0x1c, 0x02, 0x4b, 0x9a, 0xdd, 0xcc, 0xa0, 0x68,
	0xf1, 0xfe, 0x67, 0x6f, 0xed, 0x43, 0xeb, 0x2b, 0xaf, 0xed, 0x15, 0xf2, 0x3d, 0x9c, 0x28, 0x08,
	0x7d, 0xf0, 0x9d, 0x76, 0xee, 0x24, 0xad, 0x0f, 0xd2, 0x13, 0xc6, 0xa3, 0xfe, 0xd5, 0x2f, 0xb4,
	0x32, 0x74, 0x4f, 0xf1, 0x96, 0xa6, 0xe9, 0xff, 0x64, 0x2e, 0xc0, 0x86, 0x86, 0x51, 0x70, 0x00,
	0xc2, 0xe1, 0xb5, 0xf8, 0x0c, 0x69, 0x3c, 0xce, 0x21, 0x77, 0x06, 0x41, 0x2b, 0xe6, 0x76, 0x6b,
	0x3a, 0xb1, 0xc4, 0x47, 0x4c, 0x51, 0x71, 0xe7, 0x5a, 0xe4, 0x86, 0x8a, 0xa9, 0xeb, 0xc6, 0x93,
	0x1c, 0x49, 0x88, 0xe2, 0xfb, 0x69, 0x3c, 0xdd, 0x21, 0xa5, 0x9a, 0xc0, 0x6b, 0x77, 0xe0, 0x4a,
	0x34, 0xa2, 0x29, 0x98, 0x07, 0x8e, 0x8c, 0x02, 0xe3, 0xe9, 0xd9, 0x79, 0x7c, 0xf0, 0x58, 0xe0,
	0x36, 0x52, 0x83, 0x35, 0xb9, 0xa1, 0xc1, 0x3d, 0xcd, 0x9d, 0x8f, 0x82, 0xb8, 0x34, 0xf7, 0xe4,
	0x54, 0x69, 0xcf, 0x72, 0x95, 0xe6, 0x9e, 0x64, 0x4b, 0xab, 0x12, 0x8a, 0xa5, 0xf5, 0x2a, 0x7b,
	0x9e, 0x43, 0xd9, 0xb4, 0xe2, 0x59, 0x5d, 0xab, 0x64, 0xa2, 0x01, 0x47, 0xd0, 0x88, 0x67, 0xf7,
	0x45, 0x7f, 0xf7, 0xc6, 0xe3, 0x68, 0x3d, 0xb2, 0xff, 0xf4, 0xbc, 0x81, 0x5e, 0x5a, 0x03, 0xbe,
	0x82, 0xb0, 0x25, 0x58, 0x45, 0x3c, 0x46, 0x5d, 0xa5, 0x18, 0xaf, 0x72, 0x94, 0x31, 0xa3, 0xb8,
	0xee, 0x44, 0xa7, 0x14, 0xba, 0x4e, 0xa6, 0x62, 0xbb, 0xda, 0x7e, 0xbf, 0xce, 0x21, 0x67, 0x52,
	0x23, 0x6d, 0xc7, 0x31, 0x05, 0x0b, 0x0f, 0xf1, 0xfe, 0xe8, 0x61, 0x6e, 0xaa, 0x43, 0xe3, 0x4d,
	0x9e, 0x14, 0x29, 0xb2, 0xa5, 0x09, 0x7c, 0xca, 0x7c, 0x1b, 0xab, 0x38, 0x55, 0xd4, 0xdb, 0x1c,
	0x45, 0x51, 0x8d, 0x66, 0xcb, 0xda, 0x70, 0xf0, 0x3d, 0xc9, 0x7b, 0xde, 0x05, 0x9d, 0x2f, 0x9b,
	0xcb, 0xff, 0xd6, 0xb9, 0xf4, 0xaf, 0xb6, 0xf6, 0xfd, 0xc1, 0x3f, 0x7e, 0x0e, 0x46, 0xe3, 0xaf,
	0x8b, 0xdf, 0x3f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x8a, 0x49, 0xa8, 0x3e, 0x09, 0x00, 0x00,
}
