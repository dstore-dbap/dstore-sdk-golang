// Code generated by protoc-gen-go.
// source: dstore/engine/procedures/om_CopyFromTrolleyToOrder_Pu.proto
// DO NOT EDIT!

/*
Package om_CopyFromTrolleyToOrder_Pu is a generated protocol buffer package.

It is generated from these files:
	dstore/engine/procedures/om_CopyFromTrolleyToOrder_Pu.proto

It has these top-level messages:
	Parameters
	Response
*/
package om_CopyFromTrolleyToOrder_Pu

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import dstore_values "gosdk.dstore.de/values"
import dstore_engine_error "gosdk.dstore.de/engine/error"
import dstore_engine_message "gosdk.dstore.de/engine/message"
import dstore_engine_metainformation "gosdk.dstore.de/engine/metainformation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Parameters struct {
	IncorrectInformationExist      *dstore_values.BooleanValue   `protobuf:"bytes,1,opt,name=incorrect_information_exist,json=incorrectInformationExist" json:"incorrect_information_exist,omitempty"`
	IncorrectInformationExistNull  bool                          `protobuf:"varint,1001,opt,name=incorrect_information_exist_null,json=incorrectInformationExistNull" json:"incorrect_information_exist_null,omitempty"`
	AddOrderInformations           *dstore_values.BooleanValue   `protobuf:"bytes,2,opt,name=add_order_informations,json=addOrderInformations" json:"add_order_informations,omitempty"`
	AddOrderInformationsNull       bool                          `protobuf:"varint,1002,opt,name=add_order_informations_null,json=addOrderInformationsNull" json:"add_order_informations_null,omitempty"`
	UniqueId                       *dstore_values.StringValue    `protobuf:"bytes,3,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	UniqueIdNull                   bool                          `protobuf:"varint,1003,opt,name=unique_id_null,json=uniqueIdNull" json:"unique_id_null,omitempty"`
	PersonId                       *dstore_values.IntegerValue   `protobuf:"bytes,4,opt,name=person_id,json=personId" json:"person_id,omitempty"`
	PersonIdNull                   bool                          `protobuf:"varint,1004,opt,name=person_id_null,json=personIdNull" json:"person_id_null,omitempty"`
	DeliveryPersonId               *dstore_values.IntegerValue   `protobuf:"bytes,5,opt,name=delivery_person_id,json=deliveryPersonId" json:"delivery_person_id,omitempty"`
	DeliveryPersonIdNull           bool                          `protobuf:"varint,1005,opt,name=delivery_person_id_null,json=deliveryPersonIdNull" json:"delivery_person_id_null,omitempty"`
	ShippingTypeId                 *dstore_values.IntegerValue   `protobuf:"bytes,6,opt,name=shipping_type_id,json=shippingTypeId" json:"shipping_type_id,omitempty"`
	ShippingTypeIdNull             bool                          `protobuf:"varint,1006,opt,name=shipping_type_id_null,json=shippingTypeIdNull" json:"shipping_type_id_null,omitempty"`
	PaymentTypeId                  *dstore_values.IntegerValue   `protobuf:"bytes,7,opt,name=payment_type_id,json=paymentTypeId" json:"payment_type_id,omitempty"`
	PaymentTypeIdNull              bool                          `protobuf:"varint,1007,opt,name=payment_type_id_null,json=paymentTypeIdNull" json:"payment_type_id_null,omitempty"`
	DeliveryDateAndTime            *dstore_values.TimestampValue `protobuf:"bytes,8,opt,name=delivery_date_and_time,json=deliveryDateAndTime" json:"delivery_date_and_time,omitempty"`
	DeliveryDateAndTimeNull        bool                          `protobuf:"varint,1008,opt,name=delivery_date_and_time_null,json=deliveryDateAndTimeNull" json:"delivery_date_and_time_null,omitempty"`
	StartOrderId                   *dstore_values.IntegerValue   `protobuf:"bytes,9,opt,name=start_order_id,json=startOrderId" json:"start_order_id,omitempty"`
	StartOrderIdNull               bool                          `protobuf:"varint,1009,opt,name=start_order_id_null,json=startOrderIdNull" json:"start_order_id_null,omitempty"`
	PriceNodeCharacteristicId      *dstore_values.IntegerValue   `protobuf:"bytes,10,opt,name=price_node_characteristic_id,json=priceNodeCharacteristicId" json:"price_node_characteristic_id,omitempty"`
	PriceNodeCharacteristicIdNull  bool                          `protobuf:"varint,1010,opt,name=price_node_characteristic_id_null,json=priceNodeCharacteristicIdNull" json:"price_node_characteristic_id_null,omitempty"`
	AddOrderInformation            *dstore_values.IntegerValue   `protobuf:"bytes,11,opt,name=add_order_information,json=addOrderInformation" json:"add_order_information,omitempty"`
	AddOrderInformationNull        bool                          `protobuf:"varint,1011,opt,name=add_order_information_null,json=addOrderInformationNull" json:"add_order_information_null,omitempty"`
	AddOrderContentInformation     *dstore_values.IntegerValue   `protobuf:"bytes,12,opt,name=add_order_content_information,json=addOrderContentInformation" json:"add_order_content_information,omitempty"`
	AddOrderContentInformationNull bool                          `protobuf:"varint,1012,opt,name=add_order_content_information_null,json=addOrderContentInformationNull" json:"add_order_content_information_null,omitempty"`
	GetIncorrectInformation        *dstore_values.BooleanValue   `protobuf:"bytes,13,opt,name=get_incorrect_information,json=getIncorrectInformation" json:"get_incorrect_information,omitempty"`
	GetIncorrectInformationNull    bool                          `protobuf:"varint,1013,opt,name=get_incorrect_information_null,json=getIncorrectInformationNull" json:"get_incorrect_information_null,omitempty"`
	UseCashAccountMaxValue         *dstore_values.DecimalValue   `protobuf:"bytes,14,opt,name=use_cash_account_max_value,json=useCashAccountMaxValue" json:"use_cash_account_max_value,omitempty"`
	UseCashAccountMaxValueNull     bool                          `protobuf:"varint,1014,opt,name=use_cash_account_max_value_null,json=useCashAccountMaxValueNull" json:"use_cash_account_max_value_null,omitempty"`
	AbortIfItemsRemoved            *dstore_values.BooleanValue   `protobuf:"bytes,15,opt,name=abort_if_items_removed,json=abortIfItemsRemoved" json:"abort_if_items_removed,omitempty"`
	AbortIfItemsRemovedNull        bool                          `protobuf:"varint,1015,opt,name=abort_if_items_removed_null,json=abortIfItemsRemovedNull" json:"abort_if_items_removed_null,omitempty"`
}

func (m *Parameters) Reset()                    { *m = Parameters{} }
func (m *Parameters) String() string            { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()               {}
func (*Parameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Parameters) GetIncorrectInformationExist() *dstore_values.BooleanValue {
	if m != nil {
		return m.IncorrectInformationExist
	}
	return nil
}

func (m *Parameters) GetAddOrderInformations() *dstore_values.BooleanValue {
	if m != nil {
		return m.AddOrderInformations
	}
	return nil
}

func (m *Parameters) GetUniqueId() *dstore_values.StringValue {
	if m != nil {
		return m.UniqueId
	}
	return nil
}

func (m *Parameters) GetPersonId() *dstore_values.IntegerValue {
	if m != nil {
		return m.PersonId
	}
	return nil
}

func (m *Parameters) GetDeliveryPersonId() *dstore_values.IntegerValue {
	if m != nil {
		return m.DeliveryPersonId
	}
	return nil
}

func (m *Parameters) GetShippingTypeId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ShippingTypeId
	}
	return nil
}

func (m *Parameters) GetPaymentTypeId() *dstore_values.IntegerValue {
	if m != nil {
		return m.PaymentTypeId
	}
	return nil
}

func (m *Parameters) GetDeliveryDateAndTime() *dstore_values.TimestampValue {
	if m != nil {
		return m.DeliveryDateAndTime
	}
	return nil
}

func (m *Parameters) GetStartOrderId() *dstore_values.IntegerValue {
	if m != nil {
		return m.StartOrderId
	}
	return nil
}

func (m *Parameters) GetPriceNodeCharacteristicId() *dstore_values.IntegerValue {
	if m != nil {
		return m.PriceNodeCharacteristicId
	}
	return nil
}

func (m *Parameters) GetAddOrderInformation() *dstore_values.IntegerValue {
	if m != nil {
		return m.AddOrderInformation
	}
	return nil
}

func (m *Parameters) GetAddOrderContentInformation() *dstore_values.IntegerValue {
	if m != nil {
		return m.AddOrderContentInformation
	}
	return nil
}

func (m *Parameters) GetGetIncorrectInformation() *dstore_values.BooleanValue {
	if m != nil {
		return m.GetIncorrectInformation
	}
	return nil
}

func (m *Parameters) GetUseCashAccountMaxValue() *dstore_values.DecimalValue {
	if m != nil {
		return m.UseCashAccountMaxValue
	}
	return nil
}

func (m *Parameters) GetAbortIfItemsRemoved() *dstore_values.BooleanValue {
	if m != nil {
		return m.AbortIfItemsRemoved
	}
	return nil
}

type Response struct {
	Error            *dstore_engine_error.Error                       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	MetaInformation  []*dstore_engine_metainformation.MetaInformation `protobuf:"bytes,2,rep,name=meta_information,json=metaInformation" json:"meta_information,omitempty"`
	Message          []*dstore_engine_message.Message                 `protobuf:"bytes,3,rep,name=message" json:"message,omitempty"`
	Row              []*Response_Row                                  `protobuf:"bytes,4,rep,name=row" json:"row,omitempty"`
	GeneratedOrderId *dstore_values.IntegerValue                      `protobuf:"bytes,101,opt,name=generated_order_id,json=generatedOrderId" json:"generated_order_id,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetError() *dstore_engine_error.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetMetaInformation() []*dstore_engine_metainformation.MetaInformation {
	if m != nil {
		return m.MetaInformation
	}
	return nil
}

func (m *Response) GetMessage() []*dstore_engine_message.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Response) GetRow() []*Response_Row {
	if m != nil {
		return m.Row
	}
	return nil
}

func (m *Response) GetGeneratedOrderId() *dstore_values.IntegerValue {
	if m != nil {
		return m.GeneratedOrderId
	}
	return nil
}

type Response_Row struct {
	RowId             int32                       `protobuf:"varint,10000,opt,name=row_id,json=rowId" json:"row_id,omitempty"`
	InformationTypeId *dstore_values.IntegerValue `protobuf:"bytes,10001,opt,name=information_type_id,json=informationTypeId" json:"information_type_id,omitempty"`
	HTreeNodeId       *dstore_values.IntegerValue `protobuf:"bytes,10002,opt,name=h_tree_node_id,json=hTreeNodeId" json:"h_tree_node_id,omitempty"`
	ErrorCode         *dstore_values.IntegerValue `protobuf:"bytes,10003,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (m *Response_Row) Reset()                    { *m = Response_Row{} }
func (m *Response_Row) String() string            { return proto.CompactTextString(m) }
func (*Response_Row) ProtoMessage()               {}
func (*Response_Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Response_Row) GetInformationTypeId() *dstore_values.IntegerValue {
	if m != nil {
		return m.InformationTypeId
	}
	return nil
}

func (m *Response_Row) GetHTreeNodeId() *dstore_values.IntegerValue {
	if m != nil {
		return m.HTreeNodeId
	}
	return nil
}

func (m *Response_Row) GetErrorCode() *dstore_values.IntegerValue {
	if m != nil {
		return m.ErrorCode
	}
	return nil
}

func init() {
	proto.RegisterType((*Parameters)(nil), "dstore.engine.om_CopyFromTrolleyToOrder_Pu.Parameters")
	proto.RegisterType((*Response)(nil), "dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response")
	proto.RegisterType((*Response_Row)(nil), "dstore.engine.om_CopyFromTrolleyToOrder_Pu.Response.Row")
}

func init() {
	proto.RegisterFile("dstore/engine/procedures/om_CopyFromTrolleyToOrder_Pu.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1040 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x96, 0xeb, 0x6e, 0xe3, 0x44,
	0x14, 0xc7, 0xd5, 0xed, 0xf6, 0x76, 0xda, 0x6d, 0xb3, 0x4e, 0xb7, 0x75, 0x13, 0x5a, 0x4a, 0x11,
	0x12, 0xe2, 0x43, 0x8a, 0x16, 0x09, 0x56, 0x5a, 0x58, 0xa9, 0x64, 0x8b, 0x08, 0xd0, 0x6e, 0xb1,
	0x22, 0x10, 0x57, 0xcb, 0xf5, 0x9c, 0x26, 0x16, 0xb1, 0xc7, 0x8c, 0x9d, 0x6e, 0xf3, 0x16, 0x5c,
	0xde, 0x85, 0x47, 0xe1, 0x1d, 0xa0, 0xdc, 0xaf, 0x5f, 0x39, 0x9e, 0x63, 0xe7, 0xe2, 0x3a, 0x75,
	0xf9, 0xd2, 0xca, 0x99, 0xf3, 0xfb, 0xff, 0xff, 0x1e, 0xdb, 0x67, 0x0e, 0x3c, 0x14, 0x51, 0x2c,
	0x15, 0xee, 0x63, 0xd0, 0xf1, 0x02, 0xdc, 0x0f, 0x95, 0x74, 0x51, 0xf4, 0x15, 0x46, 0xfb, 0xd2,
	0xb7, 0x9b, 0x32, 0x1c, 0xbc, 0xa5, 0xa4, 0xdf, 0x56, 0xb2, 0xd7, 0xc3, 0x41, 0x5b, 0x3e, 0x51,
	0x02, 0x95, 0x7d, 0xd2, 0x6f, 0x50, 0x5d, 0x2c, 0x8d, 0x97, 0x18, 0x6e, 0x30, 0xdc, 0xb8, 0x8e,
	0xa8, 0x55, 0x53, 0xa3, 0x73, 0xa7, 0xd7, 0xc7, 0x88, 0x05, 0x6a, 0x5b, 0x93, 0xee, 0xa8, 0x94,
	0x54, 0xe9, 0x52, 0x7d, 0x72, 0xc9, 0xc7, 0x28, 0x72, 0x3a, 0x98, 0x2e, 0x3e, 0x9f, 0x5f, 0x8c,
	0x1d, 0x2f, 0x38, 0x93, 0xca, 0x77, 0x62, 0x4f, 0x06, 0x5c, 0xb4, 0xf7, 0x5d, 0x05, 0xe0, 0xc4,
	0x51, 0x0e, 0xad, 0xa2, 0x8a, 0x8c, 0x4f, 0xa0, 0xee, 0x05, 0xae, 0x54, 0x0a, 0xdd, 0xd8, 0x1e,
	0xab, 0xb6, 0xf1, 0xc2, 0x8b, 0x62, 0x73, 0x66, 0x77, 0xe6, 0xc5, 0xe5, 0xfb, 0xf5, 0x46, 0x7a,
	0x4b, 0x69, 0xcc, 0x53, 0x29, 0x7b, 0xe8, 0x04, 0x1f, 0x24, 0x57, 0xd6, 0xd6, 0x90, 0x6f, 0x8d,
	0xf0, 0xc3, 0x84, 0x36, 0xde, 0x86, 0xdd, 0x6b, 0xc4, 0xed, 0xa0, 0xdf, 0xeb, 0x99, 0x3f, 0x2c,
	0x90, 0xc5, 0xa2, 0xb5, 0x3d, 0x55, 0xe5, 0x98, 0xaa, 0x8c, 0xf7, 0x61, 0xc3, 0x11, 0xc2, 0x96,
	0x7a, 0xdf, 0xc6, 0x94, 0x22, 0xf3, 0x56, 0x79, 0xc2, 0x75, 0x42, 0xf5, 0x8e, 0x8f, 0x49, 0x47,
	0xc6, 0x23, 0xa8, 0x17, 0x4b, 0x72, 0xae, 0x1f, 0x39, 0x97, 0x59, 0xc4, 0xea, 0x48, 0xaf, 0xc1,
	0x52, 0x3f, 0xf0, 0xbe, 0xec, 0xa3, 0xed, 0x09, 0x73, 0x56, 0xa7, 0xa8, 0xe5, 0x52, 0x44, 0xb1,
	0xf2, 0x82, 0x0e, 0x87, 0x58, 0xe4, 0xe2, 0x96, 0x30, 0x5e, 0x80, 0xd5, 0x21, 0xc8, 0x5e, 0x97,
	0xec, 0xb5, 0x92, 0x95, 0x68, 0xfd, 0x07, 0xb0, 0x14, 0xd2, 0x13, 0xa2, 0xdd, 0x22, 0xfd, 0xdb,
	0x85, 0x77, 0xe9, 0x05, 0x31, 0x76, 0x50, 0xa5, 0x06, 0x5c, 0xcd, 0x06, 0x43, 0x92, 0x0d, 0x7e,
	0x4a, 0x0d, 0xb2, 0x12, 0x6d, 0xd0, 0x02, 0x43, 0x60, 0xcf, 0x3b, 0x47, 0x35, 0xb0, 0x47, 0x4e,
	0x73, 0xe5, 0x4e, 0x95, 0x0c, 0x3b, 0xc9, 0x1c, 0x5f, 0x85, 0xcd, 0xab, 0x52, 0x6c, 0xfd, 0x33,
	0x5b, 0xaf, 0xe7, 0x19, 0x1d, 0xe1, 0x10, 0x2a, 0x51, 0xd7, 0x0b, 0x43, 0xda, 0x25, 0x3b, 0x1e,
	0x84, 0x7a, 0x2b, 0xe7, 0xcb, 0x03, 0xac, 0x66, 0x50, 0x9b, 0x18, 0xb2, 0xbf, 0x0f, 0xf7, 0xf2,
	0x32, 0x6c, 0xfe, 0x0b, 0x9b, 0x1b, 0x93, 0xf5, 0xda, 0xba, 0x09, 0x6b, 0xa1, 0x33, 0xf0, 0x31,
	0x88, 0x87, 0xce, 0x0b, 0xe5, 0xce, 0x77, 0x52, 0x26, 0x35, 0x7e, 0x19, 0xd6, 0x73, 0x22, 0xec,
	0xfb, 0x2b, 0xfb, 0xde, 0x9d, 0xa8, 0xd6, 0xb6, 0x16, 0x6c, 0x0c, 0x77, 0x4a, 0x38, 0x31, 0xda,
	0x4e, 0x20, 0xec, 0xd8, 0xf3, 0xd1, 0x5c, 0xd4, 0xee, 0xdb, 0x39, 0xf7, 0x64, 0x29, 0x8a, 0x1d,
	0x3f, 0x64, 0xff, 0x6a, 0x06, 0x3f, 0x26, 0xf6, 0x20, 0x10, 0x6d, 0x5a, 0x36, 0xde, 0x80, 0x7a,
	0xb1, 0x26, 0x87, 0xf9, 0x8d, 0xc3, 0x6c, 0x16, 0xa0, 0x3a, 0xd2, 0x01, 0xac, 0x92, 0x83, 0x8a,
	0xb3, 0x4f, 0x41, 0x98, 0x4b, 0xe5, 0x1b, 0xb1, 0xa2, 0x11, 0xfe, 0x32, 0x84, 0xd1, 0x80, 0xea,
	0xa4, 0x04, 0x3b, 0xff, 0xce, 0xce, 0x95, 0xf1, 0x5a, 0x6d, 0xf9, 0x29, 0x3c, 0x13, 0x2a, 0xcf,
	0xa5, 0x80, 0x52, 0xa0, 0xed, 0x76, 0xa9, 0x1f, 0xb9, 0xd4, 0x8e, 0xe8, 0x6b, 0xf7, 0xdc, 0x24,
	0x00, 0x94, 0x07, 0xd8, 0xd2, 0x02, 0xc7, 0xc4, 0x37, 0x27, 0x70, 0x4a, 0xd3, 0x82, 0xe7, 0xae,
	0x53, 0xe7, 0x6c, 0x7f, 0xa4, 0x7d, 0x67, 0xaa, 0x8c, 0x0e, 0xfa, 0x04, 0xee, 0x15, 0x36, 0x09,
	0x73, 0xb9, 0x3c, 0x61, 0xb5, 0xa0, 0x75, 0x18, 0xaf, 0x43, 0xad, 0x50, 0x90, 0x43, 0xfd, 0x99,
	0x3e, 0xaa, 0x02, 0x52, 0xc7, 0xf9, 0x1c, 0xb6, 0x47, 0xb4, 0x2b, 0xc9, 0x2d, 0x98, 0x68, 0xac,
	0xe6, 0x4a, 0x79, 0xac, 0x5a, 0x26, 0xde, 0x64, 0x7e, 0x3c, 0xdd, 0xbb, 0xb0, 0x77, 0xad, 0x3e,
	0xa7, 0xfc, 0x8b, 0x53, 0xee, 0x4c, 0x17, 0xd2, 0x61, 0x3f, 0x84, 0xad, 0x0e, 0x26, 0x78, 0xc1,
	0x09, 0x60, 0xde, 0x29, 0x6f, 0xdb, 0x9b, 0x44, 0xb7, 0x0a, 0x4e, 0x05, 0xe3, 0x31, 0xec, 0x4c,
	0x15, 0xe6, 0x84, 0x7f, 0x73, 0xc2, 0xfa, 0x14, 0x85, 0x34, 0x5e, 0xad, 0x1f, 0xd1, 0xeb, 0xe1,
	0x44, 0x5d, 0xdb, 0x71, 0x5d, 0xd9, 0xa7, 0x5b, 0xf5, 0x9d, 0x0b, 0x5b, 0x47, 0x31, 0x57, 0x0b,
	0xf3, 0x09, 0x74, 0x3d, 0xdf, 0xe9, 0x71, 0xbe, 0x0d, 0xc2, 0x9b, 0x44, 0x1f, 0x30, 0x7c, 0xe4,
	0x5c, 0xe8, 0xdf, 0x29, 0xde, 0xb3, 0xd3, 0x85, 0x39, 0xdf, 0x3f, 0x9c, 0xaf, 0x56, 0xac, 0xa0,
	0xe3, 0x9d, 0xd0, 0x89, 0x77, 0x2a, 0xe9, 0x93, 0xf2, 0xce, 0x6c, 0x2f, 0x46, 0x3f, 0xb2, 0x15,
	0xfa, 0xf2, 0x1c, 0x85, 0xb9, 0x56, 0xbe, 0x75, 0x55, 0x8d, 0xb6, 0xce, 0x5a, 0x09, 0x68, 0x31,
	0x97, 0xb4, 0x89, 0x62, 0x45, 0xce, 0xf4, 0x6f, 0xf6, 0xee, 0x5d, 0x45, 0x93, 0x40, 0x7b, 0xdf,
	0xdf, 0x86, 0x45, 0x0b, 0xa3, 0x90, 0xce, 0x3f, 0xa4, 0xc6, 0x37, 0xa7, 0xc7, 0x92, 0x74, 0x40,
	0x18, 0x1e, 0x7c, 0xe9, 0xcc, 0xc3, 0x23, 0xcb, 0x61, 0xf2, 0xd7, 0xe2, 0x42, 0xe3, 0x23, 0xa8,
	0x24, 0x03, 0xc9, 0xc4, 0x4b, 0x70, 0x6b, 0x77, 0x96, 0xe0, 0x46, 0x0e, 0xce, 0xcf, 0x2d, 0x47,
	0x74, 0x3d, 0xf6, 0xf0, 0xac, 0x35, 0x7f, 0xf2, 0x07, 0x3a, 0x29, 0x17, 0xd2, 0x41, 0x88, 0xce,
	0xe1, 0x44, 0x71, 0xe7, 0x8a, 0x22, 0x8f, 0x49, 0x47, 0xfc, 0xdf, 0xca, 0xca, 0x8d, 0x77, 0x60,
	0x56, 0xc9, 0xa7, 0x74, 0xba, 0x26, 0xd4, 0x83, 0xc6, 0xcd, 0x07, 0xb7, 0x46, 0xb6, 0x13, 0x0d,
	0x4b, 0x3e, 0xb5, 0x12, 0x91, 0xe4, 0x38, 0xed, 0x60, 0x80, 0x8a, 0xba, 0xab, 0x18, 0xb5, 0x52,
	0xbc, 0xc1, 0x71, 0x3a, 0xc4, 0xd2, 0x16, 0x59, 0xbb, 0x9c, 0x81, 0x59, 0xd2, 0x35, 0x36, 0x60,
	0x9e, 0x94, 0x13, 0x99, 0xaf, 0x8e, 0x49, 0x67, 0xce, 0x9a, 0xa3, 0x4b, 0x6a, 0x70, 0xef, 0x41,
	0x75, 0xfc, 0x95, 0xcf, 0xce, 0xaf, 0xaf, 0x8f, 0xcb, 0xcd, 0xee, 0x8e, 0x81, 0xe9, 0x21, 0x46,
	0xfd, 0xbf, 0x6b, 0xc7, 0x0a, 0xd3, 0x7e, 0x49, 0x42, 0xdf, 0xdc, 0x40, 0x68, 0xb9, 0xdb, 0x26,
	0x24, 0x69, 0x9c, 0x24, 0xf1, 0x10, 0x40, 0x3f, 0x65, 0xea, 0x19, 0x02, 0xcd, 0x6f, 0x6f, 0x80,
	0x2f, 0xe9, 0xfa, 0x26, 0x95, 0xbf, 0xf9, 0x19, 0x8d, 0xa0, 0x32, 0xb7, 0xf7, 0xa3, 0x89, 0xfb,
	0xe3, 0x47, 0x1d, 0x19, 0x89, 0x2f, 0xb2, 0x75, 0xf1, 0x7f, 0x87, 0xf2, 0xd3, 0x79, 0x3d, 0xf7,
	0xbe, 0xf2, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x23, 0x72, 0x99, 0xbb, 0xd4, 0x0b, 0x00, 0x00,
}
