// Code generated by protoc-gen-go.
// source: dstore/engine/procedures/mi_GetApplicationPartsTree_Ad.proto
// DO NOT EDIT!

/*
Package mi_GetApplicationPartsTree_Ad is a generated protocol buffer package.

It is generated from these files:
	dstore/engine/procedures/mi_GetApplicationPartsTree_Ad.proto

It has these top-level messages:
	Parameters
	Response
*/
package mi_GetApplicationPartsTree_Ad

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import dstore_values "gosdk.dstore.de/values"
import dstore_engine_error "gosdk.dstore.de/engine/error"
import dstore_engine_message "gosdk.dstore.de/engine/message"
import dstore_engine_metainformation "gosdk.dstore.de/engine/metainformation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Parameters struct {
	ApplicationPartTreeId            *dstore_values.IntegerValue `protobuf:"bytes,1,opt,name=application_part_tree_id,json=applicationPartTreeId" json:"application_part_tree_id,omitempty"`
	ApplicationPartTreeIdNull        bool                        `protobuf:"varint,1001,opt,name=application_part_tree_id_null,json=applicationPartTreeIdNull" json:"application_part_tree_id_null,omitempty"`
	GetRootApplicationParts          *dstore_values.BooleanValue `protobuf:"bytes,2,opt,name=get_root_application_parts,json=getRootApplicationParts" json:"get_root_application_parts,omitempty"`
	GetRootApplicationPartsNull      bool                        `protobuf:"varint,1002,opt,name=get_root_application_parts_null,json=getRootApplicationPartsNull" json:"get_root_application_parts_null,omitempty"`
	IdsInOneId                       *dstore_values.IntegerValue `protobuf:"bytes,3,opt,name=ids_in_one_id,json=idsInOneId" json:"ids_in_one_id,omitempty"`
	IdsInOneIdNull                   bool                        `protobuf:"varint,1003,opt,name=ids_in_one_id_null,json=idsInOneIdNull" json:"ids_in_one_id_null,omitempty"`
	UserId                           *dstore_values.IntegerValue `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserIdNull                       bool                        `protobuf:"varint,1004,opt,name=user_id_null,json=userIdNull" json:"user_id_null,omitempty"`
	GetTreeForUserId                 *dstore_values.IntegerValue `protobuf:"bytes,5,opt,name=get_tree_for_user_id,json=getTreeForUserId" json:"get_tree_for_user_id,omitempty"`
	GetTreeForUserIdNull             bool                        `protobuf:"varint,1005,opt,name=get_tree_for_user_id_null,json=getTreeForUserIdNull" json:"get_tree_for_user_id_null,omitempty"`
	ReturnResultSet                  *dstore_values.IntegerValue `protobuf:"bytes,6,opt,name=return_result_set,json=returnResultSet" json:"return_result_set,omitempty"`
	ReturnResultSetNull              bool                        `protobuf:"varint,1006,opt,name=return_result_set_null,json=returnResultSetNull" json:"return_result_set_null,omitempty"`
	OutputIntoOneId                  *dstore_values.IntegerValue `protobuf:"bytes,7,opt,name=output_into_one_id,json=outputIntoOneId" json:"output_into_one_id,omitempty"`
	OutputIntoOneIdNull              bool                        `protobuf:"varint,1007,opt,name=output_into_one_id_null,json=outputIntoOneIdNull" json:"output_into_one_id_null,omitempty"`
	OutputIntoTwoIds                 *dstore_values.BooleanValue `protobuf:"bytes,8,opt,name=output_into_two_ids,json=outputIntoTwoIds" json:"output_into_two_ids,omitempty"`
	OutputIntoTwoIdsNull             bool                        `protobuf:"varint,1008,opt,name=output_into_two_ids_null,json=outputIntoTwoIdsNull" json:"output_into_two_ids_null,omitempty"`
	MaxTreeLevel                     *dstore_values.IntegerValue `protobuf:"bytes,9,opt,name=max_tree_level,json=maxTreeLevel" json:"max_tree_level,omitempty"`
	MaxTreeLevelNull                 bool                        `protobuf:"varint,1009,opt,name=max_tree_level_null,json=maxTreeLevelNull" json:"max_tree_level_null,omitempty"`
	GetRootPartsForApplicationId     *dstore_values.IntegerValue `protobuf:"bytes,10,opt,name=get_root_parts_for_application_id,json=getRootPartsForApplicationId" json:"get_root_parts_for_application_id,omitempty"`
	GetRootPartsForApplicationIdNull bool                        `protobuf:"varint,1010,opt,name=get_root_parts_for_application_id_null,json=getRootPartsForApplicationIdNull" json:"get_root_parts_for_application_id_null,omitempty"`
}

func (m *Parameters) Reset()                    { *m = Parameters{} }
func (m *Parameters) String() string            { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()               {}
func (*Parameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Parameters) GetApplicationPartTreeId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ApplicationPartTreeId
	}
	return nil
}

func (m *Parameters) GetGetRootApplicationParts() *dstore_values.BooleanValue {
	if m != nil {
		return m.GetRootApplicationParts
	}
	return nil
}

func (m *Parameters) GetIdsInOneId() *dstore_values.IntegerValue {
	if m != nil {
		return m.IdsInOneId
	}
	return nil
}

func (m *Parameters) GetUserId() *dstore_values.IntegerValue {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *Parameters) GetGetTreeForUserId() *dstore_values.IntegerValue {
	if m != nil {
		return m.GetTreeForUserId
	}
	return nil
}

func (m *Parameters) GetReturnResultSet() *dstore_values.IntegerValue {
	if m != nil {
		return m.ReturnResultSet
	}
	return nil
}

func (m *Parameters) GetOutputIntoOneId() *dstore_values.IntegerValue {
	if m != nil {
		return m.OutputIntoOneId
	}
	return nil
}

func (m *Parameters) GetOutputIntoTwoIds() *dstore_values.BooleanValue {
	if m != nil {
		return m.OutputIntoTwoIds
	}
	return nil
}

func (m *Parameters) GetMaxTreeLevel() *dstore_values.IntegerValue {
	if m != nil {
		return m.MaxTreeLevel
	}
	return nil
}

func (m *Parameters) GetGetRootPartsForApplicationId() *dstore_values.IntegerValue {
	if m != nil {
		return m.GetRootPartsForApplicationId
	}
	return nil
}

type Response struct {
	Error           *dstore_engine_error.Error                       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	MetaInformation []*dstore_engine_metainformation.MetaInformation `protobuf:"bytes,2,rep,name=meta_information,json=metaInformation" json:"meta_information,omitempty"`
	Message         []*dstore_engine_message.Message                 `protobuf:"bytes,3,rep,name=message" json:"message,omitempty"`
	Row             []*Response_Row                                  `protobuf:"bytes,4,rep,name=row" json:"row,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetError() *dstore_engine_error.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetMetaInformation() []*dstore_engine_metainformation.MetaInformation {
	if m != nil {
		return m.MetaInformation
	}
	return nil
}

func (m *Response) GetMessage() []*dstore_engine_message.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Response) GetRow() []*Response_Row {
	if m != nil {
		return m.Row
	}
	return nil
}

type Response_Row struct {
	RowId                      int32                       `protobuf:"varint,10000,opt,name=row_id,json=rowId" json:"row_id,omitempty"`
	SuccessorApplicationPartId *dstore_values.IntegerValue `protobuf:"bytes,10001,opt,name=successor_application_part_id,json=successorApplicationPartId" json:"successor_application_part_id,omitempty"`
	TreeLevel                  *dstore_values.IntegerValue `protobuf:"bytes,10002,opt,name=tree_level,json=treeLevel" json:"tree_level,omitempty"`
	SuccessorApplicationPart   *dstore_values.StringValue  `protobuf:"bytes,10003,opt,name=successor_application_part,json=successorApplicationPart" json:"successor_application_part,omitempty"`
	UserName                   *dstore_values.StringValue  `protobuf:"bytes,10004,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	UserId                     *dstore_values.IntegerValue `protobuf:"bytes,10005,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	HasSuccessors              *dstore_values.IntegerValue `protobuf:"bytes,10006,opt,name=has_successors,json=hasSuccessors" json:"has_successors,omitempty"`
	SuccessorApplicPartTreeId  *dstore_values.IntegerValue `protobuf:"bytes,10007,opt,name=successor_applic_part_tree_id,json=successorApplicPartTreeId" json:"successor_applic_part_tree_id,omitempty"`
	ApplicationPartTreeId      *dstore_values.IntegerValue `protobuf:"bytes,10008,opt,name=application_part_tree_id,json=applicationPartTreeId" json:"application_part_tree_id,omitempty"`
}

func (m *Response_Row) Reset()                    { *m = Response_Row{} }
func (m *Response_Row) String() string            { return proto.CompactTextString(m) }
func (*Response_Row) ProtoMessage()               {}
func (*Response_Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Response_Row) GetSuccessorApplicationPartId() *dstore_values.IntegerValue {
	if m != nil {
		return m.SuccessorApplicationPartId
	}
	return nil
}

func (m *Response_Row) GetTreeLevel() *dstore_values.IntegerValue {
	if m != nil {
		return m.TreeLevel
	}
	return nil
}

func (m *Response_Row) GetSuccessorApplicationPart() *dstore_values.StringValue {
	if m != nil {
		return m.SuccessorApplicationPart
	}
	return nil
}

func (m *Response_Row) GetUserName() *dstore_values.StringValue {
	if m != nil {
		return m.UserName
	}
	return nil
}

func (m *Response_Row) GetUserId() *dstore_values.IntegerValue {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *Response_Row) GetHasSuccessors() *dstore_values.IntegerValue {
	if m != nil {
		return m.HasSuccessors
	}
	return nil
}

func (m *Response_Row) GetSuccessorApplicPartTreeId() *dstore_values.IntegerValue {
	if m != nil {
		return m.SuccessorApplicPartTreeId
	}
	return nil
}

func (m *Response_Row) GetApplicationPartTreeId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ApplicationPartTreeId
	}
	return nil
}

func init() {
	proto.RegisterType((*Parameters)(nil), "dstore.engine.mi_GetApplicationPartsTree_Ad.Parameters")
	proto.RegisterType((*Response)(nil), "dstore.engine.mi_GetApplicationPartsTree_Ad.Response")
	proto.RegisterType((*Response_Row)(nil), "dstore.engine.mi_GetApplicationPartsTree_Ad.Response.Row")
}

func init() {
	proto.RegisterFile("dstore/engine/procedures/mi_GetApplicationPartsTree_Ad.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 877 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0xeb, 0x6e, 0xeb, 0x44,
	0x10, 0xd6, 0x21, 0xe4, 0xd2, 0xe1, 0x9c, 0x9e, 0xe0, 0x1c, 0x4e, 0x9d, 0x84, 0x42, 0x5b, 0x24,
	0x84, 0x54, 0xc9, 0x45, 0x5c, 0x04, 0x08, 0x04, 0x0a, 0xa8, 0x94, 0x00, 0x0d, 0xe0, 0xb6, 0x88,
	0xf2, 0xa3, 0x96, 0x1b, 0x2f, 0xc1, 0xc2, 0xf1, 0x46, 0xbb, 0xeb, 0x86, 0xff, 0xbc, 0x00, 0x77,
	0x78, 0x00, 0x1e, 0x85, 0x97, 0xe1, 0x7e, 0x79, 0x02, 0x66, 0x77, 0x9c, 0x8b, 0x9d, 0xa4, 0x4e,
	0xf9, 0xd3, 0x6a, 0xb3, 0xf3, 0x5d, 0x3c, 0xb3, 0x3b, 0xb3, 0xf0, 0x4a, 0x20, 0x15, 0x17, 0xec,
	0x80, 0xc5, 0x83, 0x30, 0x66, 0x07, 0x23, 0xc1, 0xfb, 0x2c, 0x48, 0x04, 0x93, 0x07, 0xc3, 0xd0,
	0x3b, 0x62, 0xaa, 0x33, 0x1a, 0x45, 0x61, 0xdf, 0x57, 0x21, 0x8f, 0xdf, 0xf7, 0x85, 0x92, 0xa7,
	0x82, 0x31, 0xaf, 0x13, 0x38, 0x18, 0xa8, 0xb8, 0xb5, 0x4f, 0x68, 0x87, 0xd0, 0xce, 0xb5, 0x90,
	0x56, 0x23, 0x95, 0xba, 0xf2, 0xa3, 0x84, 0x49, 0x62, 0x68, 0x35, 0xb3, 0xfa, 0x4c, 0x08, 0x2e,
	0xd2, 0xad, 0x76, 0x76, 0x6b, 0xc8, 0xa4, 0xf4, 0x07, 0x2c, 0xdd, 0x7c, 0x22, 0xbf, 0xa9, 0xfc,
	0x30, 0xfe, 0x84, 0x8b, 0xa1, 0xd1, 0xa5, 0xa0, 0xbd, 0x9f, 0x01, 0x00, 0x2d, 0xf8, 0xb8, 0xcb,
	0x84, 0xb4, 0x4e, 0xc1, 0xf6, 0x67, 0xde, 0xbc, 0x11, 0x9a, 0xf3, 0x94, 0x36, 0x17, 0x06, 0xf6,
	0xad, 0x9d, 0x5b, 0x4f, 0x3d, 0xf4, 0x4c, 0xdb, 0x49, 0x3f, 0x28, 0xf5, 0x18, 0xc6, 0x8a, 0x0d,
	0x98, 0xf8, 0x50, 0xaf, 0xdc, 0x47, 0xfc, 0xec, 0x87, 0xe9, 0xef, 0xea, 0x06, 0x56, 0x07, 0xb6,
	0x57, 0xb1, 0x7a, 0x71, 0x12, 0x45, 0xf6, 0x2f, 0x55, 0xe4, 0xae, 0xb9, 0xcd, 0xa5, 0xf0, 0x1e,
	0x46, 0x58, 0x1f, 0x41, 0x6b, 0xc0, 0x94, 0x27, 0x38, 0x57, 0x5e, 0x9e, 0x4b, 0xda, 0x0f, 0x2c,
	0xb5, 0x76, 0xc9, 0x79, 0xc4, 0xfc, 0x98, 0xac, 0x6d, 0x21, 0xdc, 0x45, 0x74, 0x3e, 0xf5, 0xd6,
	0x21, 0x3c, 0xbe, 0x9a, 0x99, 0xec, 0xfd, 0x4a, 0xf6, 0xda, 0x2b, 0x28, 0x8c, 0xc1, 0x57, 0xe1,
	0x4e, 0x18, 0x48, 0x2f, 0x8c, 0x3d, 0x1e, 0x9b, 0x74, 0x95, 0x8a, 0xd3, 0x05, 0x88, 0xe8, 0xc6,
	0xef, 0xc5, 0x3a, 0x47, 0xfb, 0x60, 0x65, 0xf0, 0xa4, 0xfc, 0x1b, 0x29, 0x6f, 0xce, 0x02, 0x8d,
	0xd8, 0x73, 0x50, 0x4d, 0x24, 0x13, 0x5a, 0xe6, 0xc1, 0x62, 0x99, 0x8a, 0x8e, 0x45, 0x89, 0x5d,
	0xb8, 0x9d, 0xa2, 0x88, 0xfc, 0x77, 0x22, 0x07, 0xda, 0x36, 0xc4, 0xef, 0xc0, 0x3d, 0x9d, 0x0c,
	0x53, 0x1c, 0x3c, 0x2a, 0xde, 0x44, 0xa5, 0x5c, 0xac, 0x52, 0x47, 0xa0, 0x2e, 0xd8, 0x9b, 0x5c,
	0x9c, 0x91, 0xde, 0x8b, 0xd0, 0x5c, 0x46, 0x46, 0xe2, 0x7f, 0x90, 0xf8, 0xbd, 0x3c, 0xca, 0xd8,
	0x38, 0x82, 0x87, 0x05, 0x53, 0x89, 0x88, 0x3d, 0xbc, 0x66, 0x49, 0xa4, 0x3c, 0xc9, 0x94, 0x5d,
	0x29, 0xf6, 0x70, 0x97, 0x50, 0xae, 0x01, 0x9d, 0x30, 0x85, 0x89, 0xba, 0xbf, 0x40, 0x44, 0xfa,
	0x7f, 0x92, 0x7e, 0x23, 0x87, 0x30, 0xf2, 0x6f, 0x81, 0xc5, 0x13, 0x35, 0x4a, 0x14, 0x96, 0x43,
	0xf1, 0x49, 0x41, 0xab, 0x6b, 0xe8, 0x13, 0xac, 0x8b, 0x28, 0xaa, 0xea, 0xf3, 0xb0, 0xb5, 0xc8,
	0x44, 0x06, 0xfe, 0x4a, 0x0d, 0xe4, 0x20, 0xc6, 0xc0, 0xdb, 0xd0, 0x98, 0x87, 0xa9, 0x31, 0x47,
	0x98, 0xb4, 0x6b, 0xc5, 0xc7, 0xbc, 0x3e, 0xa3, 0x3b, 0x1d, 0xf3, 0x6e, 0x20, 0xad, 0x17, 0xc0,
	0x5e, 0xc2, 0x45, 0x1e, 0xfe, 0x4e, 0x8b, 0x90, 0x07, 0x19, 0x13, 0x1d, 0xd8, 0x1c, 0xfa, 0x9f,
	0x53, 0xf9, 0x22, 0x76, 0xc5, 0x22, 0x7b, 0xa3, 0x38, 0x03, 0xb7, 0x11, 0xa2, 0xeb, 0xf9, 0xae,
	0x06, 0x58, 0x0e, 0x34, 0xb2, 0x14, 0x24, 0xfb, 0x0f, 0xc9, 0xd6, 0xe7, 0x63, 0x8d, 0x64, 0x00,
	0xbb, 0xd3, 0xbb, 0x48, 0xf7, 0x4f, 0x9f, 0x9b, 0xf9, 0x5b, 0x89, 0x75, 0x80, 0x62, 0x17, 0x8f,
	0xa6, 0x37, 0xd5, 0x5c, 0x4f, 0x3c, 0x5a, 0x73, 0x37, 0x16, 0x8b, 0xf2, 0x01, 0x3c, 0x59, 0xa8,
	0x42, 0x46, 0xff, 0x25, 0xa3, 0x3b, 0xd7, 0xd1, 0x69, 0xe3, 0x7b, 0x3f, 0x55, 0xa1, 0x86, 0x67,
	0x68, 0xc4, 0x63, 0xc9, 0xac, 0xa7, 0xa1, 0x6c, 0x9a, 0x74, 0xda, 0x31, 0x5b, 0x4e, 0x76, 0x04,
	0x50, 0x03, 0x3f, 0xd4, 0x7f, 0x5d, 0x0a, 0xb4, 0xce, 0xa1, 0xae, 0xdb, 0xb3, 0x37, 0xd7, 0x9f,
	0xb1, 0xa7, 0x95, 0x10, 0xec, 0xe4, 0xc0, 0xf9, 0x2e, 0x7e, 0x8c, 0xeb, 0xee, 0x6c, 0xed, 0xde,
	0x1d, 0x66, 0x7f, 0xc0, 0x4b, 0x58, 0x4d, 0xc7, 0x02, 0x76, 0x24, 0xcd, 0xf8, 0xd8, 0x02, 0x23,
	0x0d, 0x8d, 0x63, 0xfa, 0xef, 0x4e, 0xc2, 0xb1, 0x17, 0x94, 0x04, 0x1f, 0x63, 0x83, 0xd1, 0xa8,
	0x97, 0x9c, 0x1b, 0xcc, 0x31, 0x67, 0x92, 0x0a, 0xc7, 0xe5, 0x63, 0x57, 0xb3, 0xb4, 0xbe, 0x28,
	0x43, 0x09, 0x17, 0xd6, 0x7d, 0xa8, 0xe0, 0x52, 0x97, 0xf1, 0xcb, 0x1e, 0x66, 0xa7, 0xec, 0x96,
	0x71, 0x89, 0x35, 0xf1, 0x60, 0x5b, 0x26, 0xfd, 0x3e, 0x4a, 0xe7, 0x4a, 0x61, 0x86, 0x05, 0x86,
	0x7f, 0xd5, 0x2b, 0x2e, 0x7b, 0x6b, 0x4a, 0x91, 0x33, 0x86, 0x02, 0x2f, 0x03, 0xcc, 0x9d, 0xe4,
	0xaf, 0xd7, 0x60, 0xdb, 0x50, 0xd3, 0x73, 0x7c, 0x0e, 0xad, 0xd5, 0xee, 0xec, 0x6f, 0x7a, 0xd9,
	0x3a, 0xa7, 0x64, 0x52, 0x89, 0x30, 0x1e, 0x10, 0x97, 0xbd, 0xca, 0x19, 0xd6, 0x67, 0xc3, 0xf4,
	0xc5, 0x18, 0x47, 0xb0, 0xfd, 0x6d, 0x31, 0x53, 0x4d, 0x47, 0xf7, 0x30, 0x18, 0x7b, 0xcb, 0x74,
	0x08, 0x7c, 0xd7, 0x5b, 0x7f, 0x0a, 0xbc, 0x01, 0x9b, 0x9f, 0xfa, 0xd2, 0x9b, 0x1a, 0x92, 0xf6,
	0xf7, 0x6b, 0xa0, 0xef, 0x20, 0xe6, 0x64, 0x0a, 0xb1, 0x2e, 0x16, 0xcb, 0x95, 0x7d, 0x2c, 0xfc,
	0xb0, 0x06, 0x67, 0x33, 0x97, 0x94, 0xb9, 0x17, 0xc3, 0xd9, 0x35, 0xef, 0x90, 0x1f, 0x7b, 0xff,
	0xf7, 0x21, 0xf2, 0xfa, 0x05, 0xb4, 0x43, 0x9e, 0x3b, 0xc9, 0xb3, 0xf7, 0xdc, 0xc7, 0xaf, 0x0d,
	0xb8, 0x0c, 0x3e, 0x9b, 0xec, 0x07, 0x37, 0x7e, 0xf2, 0x5d, 0x56, 0xcc, 0xa3, 0xea, 0xd9, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x65, 0x55, 0xeb, 0x33, 0x0a, 0x00, 0x00,
}
