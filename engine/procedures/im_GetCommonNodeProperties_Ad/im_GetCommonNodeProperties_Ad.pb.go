// Code generated by protoc-gen-go.
// source: dstore/engine/procedures/im_GetCommonNodeProperties_Ad.proto
// DO NOT EDIT!

/*
Package im_GetCommonNodeProperties_Ad is a generated protocol buffer package.

It is generated from these files:
	dstore/engine/procedures/im_GetCommonNodeProperties_Ad.proto

It has these top-level messages:
	Parameters
	Response
*/
package im_GetCommonNodeProperties_Ad

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import dstore_values "gosdk.dstore.de/values"
import dstore_engine_error "gosdk.dstore.de/engine/error"
import dstore_engine_message "gosdk.dstore.de/engine/message"
import dstore_engine_metainformation "gosdk.dstore.de/engine/metainformation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Parameters struct {
	TreeNodeIds              *dstore_values.BooleanValue `protobuf:"bytes,1,opt,name=tree_node_ids,json=treeNodeIds" json:"tree_node_ids,omitempty"`
	TreeNodeIdsNull          bool                        `protobuf:"varint,1001,opt,name=tree_node_ids_null,json=treeNodeIdsNull" json:"tree_node_ids_null,omitempty"`
	LanguageId               *dstore_values.IntegerValue `protobuf:"bytes,2,opt,name=language_id,json=languageId" json:"language_id,omitempty"`
	LanguageIdNull           bool                        `protobuf:"varint,1002,opt,name=language_id_null,json=languageIdNull" json:"language_id_null,omitempty"`
	InheritDepth             *dstore_values.IntegerValue `protobuf:"bytes,3,opt,name=inherit_depth,json=inheritDepth" json:"inherit_depth,omitempty"`
	InheritDepthNull         bool                        `protobuf:"varint,1003,opt,name=inherit_depth_null,json=inheritDepthNull" json:"inherit_depth_null,omitempty"`
	OrderBy                  *dstore_values.StringValue  `protobuf:"bytes,4,opt,name=order_by,json=orderBy" json:"order_by,omitempty"`
	OrderByNull              bool                        `protobuf:"varint,1004,opt,name=order_by_null,json=orderByNull" json:"order_by_null,omitempty"`
	RecursiveEvaluation      *dstore_values.IntegerValue `protobuf:"bytes,5,opt,name=recursive_evaluation,json=recursiveEvaluation" json:"recursive_evaluation,omitempty"`
	RecursiveEvaluationNull  bool                        `protobuf:"varint,1005,opt,name=recursive_evaluation_null,json=recursiveEvaluationNull" json:"recursive_evaluation_null,omitempty"`
	DateFormat               *dstore_values.StringValue  `protobuf:"bytes,6,opt,name=date_format,json=dateFormat" json:"date_format,omitempty"`
	DateFormatNull           bool                        `protobuf:"varint,1006,opt,name=date_format_null,json=dateFormatNull" json:"date_format_null,omitempty"`
	CharacteristicIdList     *dstore_values.StringValue  `protobuf:"bytes,7,opt,name=characteristic_id_list,json=characteristicIdList" json:"characteristic_id_list,omitempty"`
	CharacteristicIdListNull bool                        `protobuf:"varint,1007,opt,name=characteristic_id_list_null,json=characteristicIdListNull" json:"characteristic_id_list_null,omitempty"`
}

func (m *Parameters) Reset()                    { *m = Parameters{} }
func (m *Parameters) String() string            { return proto.CompactTextString(m) }
func (*Parameters) ProtoMessage()               {}
func (*Parameters) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Parameters) GetTreeNodeIds() *dstore_values.BooleanValue {
	if m != nil {
		return m.TreeNodeIds
	}
	return nil
}

func (m *Parameters) GetLanguageId() *dstore_values.IntegerValue {
	if m != nil {
		return m.LanguageId
	}
	return nil
}

func (m *Parameters) GetInheritDepth() *dstore_values.IntegerValue {
	if m != nil {
		return m.InheritDepth
	}
	return nil
}

func (m *Parameters) GetOrderBy() *dstore_values.StringValue {
	if m != nil {
		return m.OrderBy
	}
	return nil
}

func (m *Parameters) GetRecursiveEvaluation() *dstore_values.IntegerValue {
	if m != nil {
		return m.RecursiveEvaluation
	}
	return nil
}

func (m *Parameters) GetDateFormat() *dstore_values.StringValue {
	if m != nil {
		return m.DateFormat
	}
	return nil
}

func (m *Parameters) GetCharacteristicIdList() *dstore_values.StringValue {
	if m != nil {
		return m.CharacteristicIdList
	}
	return nil
}

type Response struct {
	Error           *dstore_engine_error.Error                       `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	MetaInformation []*dstore_engine_metainformation.MetaInformation `protobuf:"bytes,2,rep,name=meta_information,json=metaInformation" json:"meta_information,omitempty"`
	Message         []*dstore_engine_message.Message                 `protobuf:"bytes,3,rep,name=message" json:"message,omitempty"`
	Row             []*Response_Row                                  `protobuf:"bytes,4,rep,name=row" json:"row,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetError() *dstore_engine_error.Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetMetaInformation() []*dstore_engine_metainformation.MetaInformation {
	if m != nil {
		return m.MetaInformation
	}
	return nil
}

func (m *Response) GetMessage() []*dstore_engine_message.Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Response) GetRow() []*Response_Row {
	if m != nil {
		return m.Row
	}
	return nil
}

type Response_Row struct {
	RowId                     int32                       `protobuf:"varint,10000,opt,name=row_id,json=rowId" json:"row_id,omitempty"`
	IsInherited               *dstore_values.BooleanValue `protobuf:"bytes,10001,opt,name=is_inherited,json=isInherited" json:"is_inherited,omitempty"`
	UnitId                    *dstore_values.IntegerValue `protobuf:"bytes,10002,opt,name=unit_id,json=unitId" json:"unit_id,omitempty"`
	CharacteristicDescription *dstore_values.StringValue  `protobuf:"bytes,10003,opt,name=characteristic_description,json=characteristicDescription" json:"characteristic_description,omitempty"`
	HasDetails                *dstore_values.BooleanValue `protobuf:"bytes,10004,opt,name=has_details,json=hasDetails" json:"has_details,omitempty"`
	Value                     *dstore_values.StringValue  `protobuf:"bytes,10005,opt,name=value" json:"value,omitempty"`
	ValueLanguageId           *dstore_values.IntegerValue `protobuf:"bytes,10006,opt,name=value_language_id,json=valueLanguageId" json:"value_language_id,omitempty"`
	CharacteristicId          *dstore_values.IntegerValue `protobuf:"bytes,10007,opt,name=characteristic_id,json=characteristicId" json:"characteristic_id,omitempty"`
	UnitSymbol                *dstore_values.StringValue  `protobuf:"bytes,10008,opt,name=unit_symbol,json=unitSymbol" json:"unit_symbol,omitempty"`
	ValueId                   *dstore_values.IntegerValue `protobuf:"bytes,10009,opt,name=value_id,json=valueId" json:"value_id,omitempty"`
	Recursive                 *dstore_values.BooleanValue `protobuf:"bytes,10010,opt,name=recursive" json:"recursive,omitempty"`
	PredefinedValues          *dstore_values.BooleanValue `protobuf:"bytes,10011,opt,name=predefined_values,json=predefinedValues" json:"predefined_values,omitempty"`
}

func (m *Response_Row) Reset()                    { *m = Response_Row{} }
func (m *Response_Row) String() string            { return proto.CompactTextString(m) }
func (*Response_Row) ProtoMessage()               {}
func (*Response_Row) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Response_Row) GetIsInherited() *dstore_values.BooleanValue {
	if m != nil {
		return m.IsInherited
	}
	return nil
}

func (m *Response_Row) GetUnitId() *dstore_values.IntegerValue {
	if m != nil {
		return m.UnitId
	}
	return nil
}

func (m *Response_Row) GetCharacteristicDescription() *dstore_values.StringValue {
	if m != nil {
		return m.CharacteristicDescription
	}
	return nil
}

func (m *Response_Row) GetHasDetails() *dstore_values.BooleanValue {
	if m != nil {
		return m.HasDetails
	}
	return nil
}

func (m *Response_Row) GetValue() *dstore_values.StringValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Response_Row) GetValueLanguageId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ValueLanguageId
	}
	return nil
}

func (m *Response_Row) GetCharacteristicId() *dstore_values.IntegerValue {
	if m != nil {
		return m.CharacteristicId
	}
	return nil
}

func (m *Response_Row) GetUnitSymbol() *dstore_values.StringValue {
	if m != nil {
		return m.UnitSymbol
	}
	return nil
}

func (m *Response_Row) GetValueId() *dstore_values.IntegerValue {
	if m != nil {
		return m.ValueId
	}
	return nil
}

func (m *Response_Row) GetRecursive() *dstore_values.BooleanValue {
	if m != nil {
		return m.Recursive
	}
	return nil
}

func (m *Response_Row) GetPredefinedValues() *dstore_values.BooleanValue {
	if m != nil {
		return m.PredefinedValues
	}
	return nil
}

func init() {
	proto.RegisterType((*Parameters)(nil), "dstore.engine.im_GetCommonNodeProperties_Ad.Parameters")
	proto.RegisterType((*Response)(nil), "dstore.engine.im_GetCommonNodeProperties_Ad.Response")
	proto.RegisterType((*Response_Row)(nil), "dstore.engine.im_GetCommonNodeProperties_Ad.Response.Row")
}

func init() {
	proto.RegisterFile("dstore/engine/procedures/im_GetCommonNodeProperties_Ad.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 819 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x56, 0x6b, 0x4f, 0x33, 0x45,
	0x14, 0x0e, 0xd6, 0x5e, 0x3c, 0x05, 0x29, 0x03, 0xc1, 0xa1, 0x4d, 0x8c, 0x81, 0x2f, 0x1a, 0x75,
	0xf1, 0x12, 0xe3, 0x05, 0x14, 0x45, 0x50, 0x1b, 0xa1, 0x21, 0x6b, 0x62, 0x22, 0x1f, 0xdc, 0x6c,
	0x3b, 0x87, 0x76, 0xe2, 0x76, 0xa7, 0x99, 0xd9, 0x42, 0xf8, 0x17, 0xde, 0xf1, 0xf2, 0x47, 0xde,
	0xbf, 0xf4, 0xde, 0xbf, 0xbd, 0x9f, 0xdf, 0xb9, 0x6c, 0xbb, 0x6d, 0x69, 0xde, 0x2d, 0x5f, 0x68,
	0x67, 0xe6, 0x79, 0xce, 0x73, 0x66, 0xce, 0x79, 0x0e, 0x85, 0x7d, 0xa6, 0x12, 0x21, 0x71, 0x17,
	0xe3, 0x2e, 0x8f, 0x71, 0x77, 0x20, 0x45, 0x07, 0xd9, 0x50, 0xa2, 0xda, 0xe5, 0xfd, 0xe0, 0x5b,
	0x4c, 0xbe, 0x16, 0xfd, 0xbe, 0x88, 0x5b, 0x82, 0xe1, 0x99, 0x14, 0x03, 0x94, 0x09, 0x47, 0x15,
	0x7c, 0xc5, 0x3c, 0x0d, 0x4c, 0x04, 0x79, 0xdb, 0xb1, 0x3d, 0xc7, 0xf6, 0x5e, 0x48, 0xa9, 0xaf,
	0xa7, 0x52, 0x97, 0x61, 0x34, 0x44, 0xe5, 0x22, 0xd4, 0xb7, 0xa6, 0xf5, 0x51, 0x4a, 0x21, 0xd3,
	0xa3, 0xc6, 0xf4, 0x51, 0x1f, 0x95, 0x0a, 0xbb, 0x98, 0x1e, 0xee, 0xcc, 0x1e, 0x26, 0x21, 0x8f,
	0x2f, 0x84, 0xec, 0x87, 0x09, 0x17, 0xb1, 0x03, 0x6d, 0xdf, 0x2b, 0x01, 0x9c, 0x85, 0x32, 0xd4,
	0xa7, 0x28, 0x15, 0x39, 0x80, 0x95, 0x44, 0x22, 0x06, 0xb1, 0x4e, 0x2d, 0xe0, 0x4c, 0xd1, 0xa5,
	0x37, 0x96, 0xde, 0xac, 0x7e, 0xd0, 0xf0, 0xd2, 0x5b, 0xa4, 0x89, 0xb5, 0x85, 0x88, 0x30, 0x8c,
	0x7f, 0x34, 0x2b, 0xbf, 0x6a, 0x18, 0xe6, 0x2e, 0x4d, 0xa6, 0xc8, 0x3b, 0x40, 0xa6, 0x02, 0x04,
	0xf1, 0x30, 0x8a, 0xe8, 0xfd, 0xb2, 0x0e, 0x53, 0xf1, 0x57, 0x27, 0x90, 0x2d, 0xbd, 0x4f, 0xf6,
	0xa1, 0x1a, 0x85, 0x71, 0x77, 0xa8, 0x93, 0xd6, 0x60, 0xfa, 0xd2, 0x5c, 0x31, 0x1e, 0x27, 0xd8,
	0x45, 0xe9, 0xc4, 0x60, 0x84, 0x6f, 0x32, 0xf2, 0x16, 0xd4, 0x26, 0xd8, 0x4e, 0xe9, 0x81, 0x53,
	0x7a, 0x35, 0x83, 0x59, 0xa1, 0x2f, 0x61, 0x85, 0xc7, 0x3d, 0x94, 0x3c, 0x09, 0x18, 0x0e, 0x92,
	0x1e, 0x2d, 0xe4, 0x4b, 0x2d, 0xa7, 0x8c, 0x23, 0x43, 0x20, 0xef, 0x02, 0x99, 0x8a, 0xe0, 0xe4,
	0x1e, 0x3a, 0xb9, 0xda, 0x24, 0xd4, 0x0a, 0x7e, 0x04, 0x15, 0x21, 0x19, 0xca, 0xa0, 0x7d, 0x4d,
	0x5f, 0xb6, 0x5a, 0xf5, 0x19, 0x2d, 0x95, 0x48, 0x1e, 0x77, 0x9d, 0x54, 0xd9, 0x62, 0x0f, 0xaf,
	0xc9, 0x0e, 0xac, 0x8c, 0x68, 0x4e, 0xe0, 0x91, 0x13, 0xa8, 0xa6, 0x00, 0x1b, 0xbb, 0x05, 0x1b,
	0x12, 0x3b, 0x43, 0xa9, 0xf8, 0x25, 0x06, 0x68, 0xc2, 0xd9, 0x8a, 0xd2, 0x62, 0xfe, 0x9d, 0xd6,
	0xc7, 0xc4, 0xe3, 0x31, 0x8f, 0xec, 0xc1, 0xd6, 0xbc, 0x78, 0x2e, 0x81, 0xc7, 0x2e, 0x81, 0xd7,
	0xe6, 0x10, 0x6d, 0x32, 0x7b, 0x50, 0x65, 0x61, 0x82, 0x81, 0x6b, 0x2c, 0x5a, 0xca, 0xbd, 0x2b,
	0x18, 0xf8, 0x37, 0x16, 0x6d, 0x2a, 0x38, 0x41, 0x76, 0x82, 0x4f, 0xd2, 0x0a, 0x66, 0x30, 0xab,
	0x73, 0x06, 0x9b, 0x9d, 0x9e, 0x6e, 0xd4, 0x8e, 0xee, 0x53, 0xae, 0x12, 0xde, 0x31, 0x25, 0x8f,
	0xf4, 0x37, 0x5a, 0xce, 0x95, 0xdc, 0x98, 0x66, 0x36, 0xd9, 0x89, 0xfe, 0x24, 0x5f, 0x40, 0x63,
	0x7e, 0x44, 0x97, 0xc7, 0x53, 0x97, 0x07, 0x9d, 0xc7, 0x35, 0x19, 0x6d, 0xdf, 0x54, 0xa0, 0xe2,
	0xa3, 0x1a, 0x88, 0x58, 0x21, 0x79, 0x0f, 0x8a, 0xd6, 0x98, 0xa9, 0x61, 0xc6, 0xd9, 0xa4, 0xb6,
	0x77, 0xa6, 0x3d, 0x36, 0x7f, 0x7d, 0x07, 0x24, 0x3f, 0x41, 0xcd, 0x58, 0x32, 0x98, 0xf0, 0xa4,
	0x36, 0x40, 0x41, 0x93, 0xbd, 0x19, 0xf2, 0xac, 0x73, 0x4f, 0xf5, 0xba, 0x99, 0xad, 0xfd, 0xd5,
	0xfe, 0xf4, 0x06, 0xf9, 0x04, 0xca, 0xe9, 0x28, 0xd0, 0x7d, 0x6e, 0x22, 0xbe, 0x7e, 0x2b, 0xa2,
	0x1b, 0x14, 0xa7, 0xee, 0xd3, 0x1f, 0xc1, 0xc9, 0xf7, 0x50, 0x90, 0xe2, 0x4a, 0x77, 0xac, 0x61,
	0x7d, 0xea, 0xdd, 0x61, 0x76, 0x79, 0xa3, 0xa7, 0xf0, 0x7c, 0x71, 0xe5, 0x9b, 0x28, 0xf5, 0x67,
	0x45, 0x28, 0xe8, 0x05, 0xd9, 0x84, 0x92, 0x5e, 0x1a, 0x83, 0xff, 0xda, 0xd2, 0xaf, 0x53, 0xf4,
	0x8b, 0x7a, 0xa9, 0xfd, 0x7b, 0x00, 0xcb, 0x5c, 0x05, 0xa9, 0x75, 0x90, 0xd1, 0xdf, 0x5a, 0x0b,
	0x0c, 0x1b, 0xae, 0x9a, 0x23, 0x82, 0x36, 0x59, 0x79, 0x18, 0x6b, 0x43, 0xea, 0xc8, 0xbf, 0xb7,
	0xf2, 0x9b, 0xbf, 0x64, 0xc0, 0x5a, 0xf7, 0x1c, 0xea, 0x33, 0x85, 0x67, 0xa8, 0x3a, 0x92, 0x0f,
	0x6c, 0x0d, 0xfe, 0x68, 0xe5, 0xf6, 0xd3, 0xd6, 0x34, 0xfd, 0x28, 0x63, 0x93, 0xcf, 0xa1, 0xda,
	0x0b, 0x95, 0x0e, 0xa8, 0x4b, 0x16, 0x29, 0xfa, 0xe7, 0x02, 0x57, 0x02, 0x4d, 0x38, 0x72, 0x78,
	0xf2, 0x3e, 0x14, 0x2d, 0x84, 0xfe, 0x95, 0x9f, 0x85, 0x43, 0x92, 0xef, 0x60, 0xcd, 0x7e, 0x09,
	0x26, 0x27, 0xe9, 0xdf, 0x0b, 0x3c, 0xc7, 0xaa, 0xdd, 0x3c, 0xc9, 0xe6, 0x69, 0x13, 0xd6, 0x6e,
	0x19, 0x82, 0xde, 0x2c, 0x10, 0xa9, 0x36, 0xeb, 0x11, 0x33, 0xd8, 0x6d, 0x65, 0xd4, 0x75, 0xbf,
	0x2d, 0x22, 0xfa, 0x4f, 0xfe, 0x6d, 0xc0, 0xe0, 0x7f, 0xb0, 0x70, 0xf2, 0x31, 0x54, 0xdc, 0x95,
	0xb4, 0xfe, 0xbf, 0x0b, 0xe8, 0x97, 0xed, 0xa6, 0x96, 0xfd, 0x0c, 0x5e, 0x19, 0xcf, 0x29, 0xfa,
	0xdf, 0x02, 0x6f, 0x9f, 0xc1, 0xcd, 0xed, 0x07, 0x12, 0x19, 0x5e, 0xe8, 0x56, 0x67, 0x81, 0x03,
	0xd3, 0xff, 0x17, 0x88, 0x51, 0xcb, 0x68, 0x76, 0x43, 0x1d, 0xfe, 0x0c, 0x0d, 0x2e, 0x66, 0xcc,
	0x93, 0xfd, 0x6c, 0x38, 0x3f, 0xe8, 0x0a, 0xc5, 0x7e, 0x19, 0x9d, 0xb3, 0x3b, 0xff, 0xb2, 0x68,
	0x97, 0xec, 0xff, 0xee, 0x0f, 0x9f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x10, 0xf2, 0xf1, 0x9a,
	0x08, 0x00, 0x00,
}
